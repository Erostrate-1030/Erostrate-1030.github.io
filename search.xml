<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Change Log 更新日志</title>
    <url>/posts/change_log.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>22-11-15 | <strong>大更新</strong>： 我换主题了！！！</p>
<span id="more"></span>

<h2 id="🤔-想上线的功能"><a href="#🤔-想上线的功能" class="headerlink" title="🤔 想上线的功能"></a>🤔 想上线的功能</h2><table>
<thead>
<tr>
<th>加入日期</th>
<th>任务</th>
<th>紧急</th>
<th>必要</th>
<th>目前状态</th>
</tr>
</thead>
<tbody><tr>
<td>22-11-14</td>
<td>pixelmind 开发</td>
<td>❌</td>
<td>❌</td>
<td>99%了，但是仍未正式发布</td>
</tr>
<tr>
<td>22-11-08</td>
<td>随机图标</td>
<td>⭕</td>
<td>⭕</td>
<td>啊啊啊啊啊</td>
</tr>
<tr>
<td>22-10-22</td>
<td>文章漫游</td>
<td>❌</td>
<td>❌</td>
<td>要修改权限</td>
</tr>
</tbody></table>
<hr>
<h2 id="🤗-以下是更新日志"><a href="#🤗-以下是更新日志" class="headerlink" title="🤗 以下是更新日志"></a>🤗 以下是更新日志</h2><h3 id="2022-11-15"><a href="#2022-11-15" class="headerlink" title="2022-11-15"></a>2022-11-15</h3><p>更换为 <a href="https://github.com/blackshow/hexo-theme-freemind.386">freemind.386</a> 主题，并且魔改了很多CSS代码。</p>
<p>魔改后的主题我会上传到 Github ，但是得等我弄到服务器设置好 demo 页面再说。</p>
<h3 id="2022-11-07"><a href="#2022-11-07" class="headerlink" title="2022-11-07"></a>2022-11-07</h3><p>想把图标弄成每次刷新都会随机更换的样子，这个功能可以通过改 <code>cover.ejs</code> 完成，代码如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img no-lazy alt=&quot;Error Here&quot; class=&quot;cover__avatar&quot; src=&quot;[图床地址]\&lt;%= Math.ceil(Math.random() * 20)%&gt;.png&quot;&gt; </span><br></pre></td></tr></table></figure>

<p>但是，我放弃了，因为：</p>
<ul>
<li>引用路径，由于图标改动涉及到不同层级的页面，引用路径显然行不通</li>
<li>使用github为图床，只有在有VPN的情况图片才能正常显示，不行</li>
<li>使用其他图床，公共图床生成的链接名不是<code>数字.png</code>，个人能力有限不会弄</li>
<li>目前的方案下，不同页面刷新会出现不同的图标，但是同一个页面刷新不会有任何变化</li>
</ul>
<p>后续可能尝试的方案：</p>
<ul>
<li>直接连接到博客的图床，只要博客能生成，那么图片也可以生成</li>
<li><del>可能附加：写一个手动切换的按钮（每次点击切换）</del></li>
</ul>
<h3 id="2022-11-05"><a href="#2022-11-05" class="headerlink" title="2022-11-05"></a>2022-11-05</h3><ul>
<li>对 cards 主题进行了大规模魔改，包括：<ul>
<li>调整字体（细）</li>
<li>主页元素减少</li>
<li>顶部导航栏优化</li>
</ul>
</li>
<li>把自己的博客变得像 Mastodon 的搜索功能一样极度用户不友好，后续更新应该也是主要针对博客的界面简化进行</li>
</ul>
<h3 id="2022-10-22"><a href="#2022-10-22" class="headerlink" title="2022-10-22"></a>2022-10-22</h3><ul>
<li><a href="https://github.com/D0n9X1n/hexo-blog-encrypt">隐私设置 hexo-blog-encrypt</a><ul>
<li>之前装了之后发现很丑，需要改CSS，卸了</li>
<li>又装了回来，因为发现有些主题还挺好看的，将就用吧</li>
</ul>
</li>
</ul>
<h3 id="2022-10-21"><a href="#2022-10-21" class="headerlink" title="2022-10-21"></a>2022-10-21</h3><ul>
<li><a href="https://github.com/hexojs/hexo-generator-feed">rss订阅 hexo-generator-feed</a><ul>
<li>订阅只需要在主页域名后加 <code>/atom.xml</code> 即可</li>
</ul>
</li>
</ul>
<h3 id="2022-10-17"><a href="#2022-10-17" class="headerlink" title="2022-10-17"></a>2022-10-17</h3><ul>
<li><a href="https://github.com/Drew233/hexo-generator-random">文章漫游 hexo-generator-random</a><ul>
<li>会随机到一些不想被别人看到的页面，安全性担忧</li>
<li>后续可能会采用不用插件的方案</li>
</ul>
</li>
<li><a href="https://github.com/rozbo/hexo-abbrlink">短链接 hexo-abbrlink</a></li>
<li><a href="https://developer.spotify.com/documentation/embeds/guides/creating-an-embed/">文内音乐播放 embed track</a></li>
</ul>
<h3 id="2022-10-16"><a href="#2022-10-16" class="headerlink" title="2022-10-16"></a>2022-10-16</h3><ul>
<li><a href="https://theme-cards.ichr.me/pages/">归档功能 archives</a></li>
<li>更新了一下CSS代码（子分类缩进）</li>
</ul>
<h3 id="2022-10-15"><a href="#2022-10-15" class="headerlink" title="2022-10-15"></a>2022-10-15</h3><ul>
<li>创建更新日志</li>
</ul>
<h3 id="2022-10-07"><a href="#2022-10-07" class="headerlink" title="2022-10-07"></a>2022-10-07</h3><ul>
<li><a href="http://this-lib-cannot-afford-other-names.xyz/posts/genesis.html">创建博客</a><ul>
<li>初步配置有<ul>
<li>站内搜索</li>
<li>匿名评论</li>
<li>躲避站外搜索</li>
<li>置顶文章</li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>一些摘錄</title>
    <url>/posts/initium_221118.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘录。</p>
<span id="more"></span>
<h2 id="《俄国行记：一个战争中的社会，如何当作战争没有发生？》"><a href="#《俄国行记：一个战争中的社会，如何当作战争没有发生？》" class="headerlink" title="《俄国行记：一个战争中的社会，如何当作战争没有发生？》"></a>《俄国行记：一个战争中的社会，如何当作战争没有发生？》</h2><blockquote>
<p>朋友的一家熟人是典型的中产阶级家庭。十月初的某天，他们发现门上被贴了一张征兵信——要求男主人去征兵站报到。他们选择了无视。几天后，门上出现了第二张征兵信。这下紧张了。略加思索，他们发现自己不想移民，因为莫斯科的工作还要保住。于是他们决定：女主人带着孩子住去亲戚家，男主人继续住在公寓里，把窗帘都拉起来，夜里关着灯，装作没人在家。几天后，男主人在家听见了敲门声，来者试了几次，发现没人响应，就走了。男人打开门，看到门上贴着第三张征兵信。</p>
<p>几天之后，莫斯科市宣布第一轮征兵结束。这家人暂时躲过一劫。</p>
<p>与暴力机器的相对无能对应的是，反对战争的俄罗斯人仍然在努力做些什么。^<a href="https://theinitium.com/article/20221103-international-opinion-russia-travel-note/">1</a></p>
</blockquote>
<blockquote>
<p>在后苏联时代的俄罗斯政治研究中，有一个概念叫做“去政治化”。这一理论的核心解释是，在后苏联时代，尤其是普京时代的俄罗斯，只有极少数人才能够从事政治，而这些人和广大的民众形成了一种无言的默契，或者说，沉默的契约。其内容是：民众不要管政治，政治是少数人的事情；反过来，搞政治的少数人也不会去影响和过多插手普通民众的生活，他们想怎么过就怎么过。这多少解释了为什么普京要把战争称为“特别军事行动”，又解释了为何战争海报和公益广告摆在一起——一切都试图显得这场战争只是极少数专业军人在做的事情，和普通民众，尤其是大城市的中产阶级绝无关系，民众们可以继续过着平静的生活。</p>
<p>但这也许只能解释并不喜欢普京的中产阶级的想法。小城市居民的“去政治化”也许是没有别的选择，只能服从安排；而城市中下层青年的“去政治化”，大概是彻底不合作也彻底不在乎——反正无论国家是否处于战争状态，他们的未来都是一股湿漉漉的霉味。</p>
</blockquote>
<blockquote>
<p>让生活继续平静下去，当作战争没有发生，要付出什么代价？许多人认为未来的变局会来自于俄罗斯被迫开展总动员，这意味着打破“沉默契约”，人们不再有别的选择，只能站在反对普京的一边。但也许，为了避免这一场面，为了避免想象中的总动员和战时状态，普京还有许多选项——甚至，这其中包括了孤注一掷地在战场上搬出大规模杀伤性武器的选项。^<a href="https://theinitium.com/article/20221103-international-opinion-russia-travel-note/">1</a></p>
</blockquote>
<hr>
<h2 id="《香港未来无人抽烟？吸烟与禁烟中的殖民史和现代性》"><a href="#《香港未来无人抽烟？吸烟与禁烟中的殖民史和现代性》" class="headerlink" title="《香港未来无人抽烟？吸烟与禁烟中的殖民史和现代性》"></a>《香港未来无人抽烟？吸烟与禁烟中的殖民史和现代性》</h2><blockquote>
<p>烟斗和雪茄的狂热爱好者、美国小说家马克．吐温曾讥讽地说，“人是唯一会吸烟，或者需要吸烟的动物”。但随着香港吸烟与健康委员会早前建议，本港应仿效纽西兰的“无烟世代”法案，立法禁止向2009年后出生的新世代出售烟草产品，人或许有天再不能合法地吸烟。换句话，若立法顺利，本届政府2027年任期届满时，18岁或以下人士将永远被禁买烟，并在期间逐步调高烟草税，目标是在2025年将零售价提升至约200元。^<a href="https://theinitium.com/article/20221114-opinion-smoking-studies/">2</a></p>
</blockquote>
<blockquote>
<p>欧洲人与烟草的初吻则始于哥伦布的航海历险旅程。1514年，卡萨斯修士（Bartolomé de las Casas）重新编撰哥伦布的航海日记，并加入自己的评论来描述第一次看到其他人吸烟的画面，“⋯⋯男人们手中都拿着火把⋯⋯在加入某种叶子⋯⋯他们将一端燃点，在另一端吸啜或吮吸，吸入它的烟气，使他们的身体失去知觉。他们把这些火枪或者我们叫做火枪的东西称作‘塔巴果’（烟草，Tabacos）”。</p>
<p>原住民通过这些令人上瘾的“叶子”来反向渗透侵略者。1550年代，烟草的种子被带回西班牙和葡萄牙后，起初是在欧洲的王宫花园里种植，并有御医亲自研究和培植。到了16世纪，烟草渐见在世界流传，由伊利比亚半岛往北传播，传到了法国、英国、苏格兰、普鲁士及瑞士等地，并成为西班牙和葡萄牙轮船上常见的货物。然而由于供应不足的关系，烟草的零售价格一直高企，只有富有人家才能负担得起这种“药物”。烟草渐渐成为新世界和旧世界建立国际贸易链的经济作物。^<a href="https://theinitium.com/article/20221114-opinion-smoking-studies/">2</a></p>
</blockquote>
<blockquote>
<p>这些早期禁烟令的真实意图，未必是考虑吸烟危害国民健康，而是担心烟草买卖危害本地经济活动、农业安全等。</p>
<p>《近代中国的不吸纸烟运动》则反映了民国禁烟运动中的意识形态，当时西方基督教节制观念认为，吸烟有损“个人品性”、“意志”，在华的英美基督教青年会带来这种观念，在中国的语境下演变成集体取向的危害行为，即“吸烟损害的不仅是个人的身体，也是国民的身体。”为爱国而不吸烟，成为这一运动的核心。书评人维舟总结这些运动的矛盾性，因吸烟或不吸烟的思想资源，都是来自西方，两者共为现代性的一体两面——中国最早在1899年禁止吸烟，恰恰是清廷官员将之视为西化的标志，禁烟运动的真正中心在于吸烟对国家和社会的危害。^<a href="https://theinitium.com/article/20221114-opinion-smoking-studies/">2</a></p>
</blockquote>
<blockquote>
<p>Simone也大胆挑战关于二手烟、三手烟污染公共空气的论述，丰富了观察禁烟行动的阶级视角：她认为如果不假思索地认同全面禁烟的目标，就加入了把吸烟者在社会和空间层面边缘化的行动——“空气有毒”到底是侵犯了谁的空气安全？“洁净”又是由谁来定义？</p>
<p>这或许更接近我们想要讨论的，至少在香港，人们对“安全、洁净、高效”的官方假象已经开始厌倦和疲劳，吸烟未尝不能是一种维护“正常”生活的反叛。笔者很难不想起香港的煲烟文化，这里男男女女街头巷弄都常见“放烟break”，疫情中能偷偷摸摸摘下口罩，伸长脖子吸一口烟，会得到一种久违的解放感。明年立法通过加价之时，会发生如《志明与春娇》里烟民跑遍偏僻的便利店搜刮香烟那幕吗？香烟在兵荒马乱时总有让人安慰的功能。^<a href="https://theinitium.com/article/20221114-opinion-smoking-studies/">2</a></p>
</blockquote>
<hr>
<h2 id="《中国大学生在操场爬行：当“发疯文学”照进现实》"><a href="#《中国大学生在操场爬行：当“发疯文学”照进现实》" class="headerlink" title="《中国大学生在操场爬行：当“发疯文学”照进现实》"></a>《中国大学生在操场爬行：当“发疯文学”照进现实》</h2><blockquote>
<p>刚蹲下去的那一刻，是阿欣心跳最快的时候。第一次在操场干这事，她感到有些羞耻。还好，她戴了帽子和口罩。</p>
<p>双膝跪下，手撑在人造草皮上。阿欣跟在两位女生之后，身后还有一位女生，四人成一列。像平常走路一样，阿欣开始用右手带左脚，左手带右脚，向前蠕动，让自己的节奏跟上队伍。真正爬动后，她发现“羞耻”慢慢消失了，取而代之的是难以形容的开心。作业截止日、活动策划不再是积压在心头的任务，她关注的只剩爬行速度、磨到小石子的手掌和膝盖。^<a href="https://theinitium.com/article/20221115-mainland-college-students-crawl/">3</a></p>
</blockquote>
<blockquote>
<p>这是当下许多大学生的精神状态。不久前，大学生们还流行过制作纸狗。一位大四学生告诉端传媒，她在万圣节晚上花了近七个小时做一只灵缇犬，穿了袜子、牛仔衣，还搭配了眼镜，目前还摆在宿舍门口，用来看门。楼道里还有其他两只纸狗，不过身型比她的小得多。因品种特别、制作精美，她的纸狗在小红书上得到了超过2万的点赞。</p>
<p>制作纸箱小狗是疫情防控之下大学生的娱乐方式，并通过遛狗、征婚等方式创造新的社交，中国传媒大学中国网络视频研究中心的官方公众号“知著网”称，这是他们面对困境和焦虑的一种独特回应和情绪表达。^<a href="https://theinitium.com/article/20221115-mainland-college-students-crawl/">3</a></p>
</blockquote>
<blockquote>
<p>“就好像我把姿态放到最低，我都直接开始跪着爬了。”在北京读书的江桐说，在大家可能已被压弯了、无法直立地去做一些事情时，那就直接压在地上，用最低的姿态来表达自己的不满。正如某个爬行群里的一位网友所说：“爬行是一个相对运动的拒绝跪着。”^<a href="https://theinitium.com/article/20221115-mainland-college-students-crawl/">3</a></p>
</blockquote>
<blockquote>
<p>“政治高压使人不能堂堂正正地行走，甚至不能自主选择堪称屈辱的爬行。以为有自主发疯的权利，但其实无论做什么都是不自主的，不论选择捍卫尊严，还是选择放弃尊严。因为尊严并不掌握在个体手中。”江桐说。^<a href="https://theinitium.com/article/20221115-mainland-college-students-crawl/">3</a></p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>端媒</tag>
      </tags>
  </entry>
  <entry>
    <title>月亮与三十元</title>
    <url>/posts/fast_moon.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>月亮与三十元</p>
<span id="more"></span>

<p>深夜十点半的月亮<br>悬挂在食肆二楼招牌，<br>红与黄的霓虹光组成了她的皎洁。</p>
<p>清洁剂与油炸食品<br>嗅觉寻迹而来，<br>沙拉与酸黄瓜<br>是神秘天体的人间风味。</p>
<p>我如天狗一般<br>咽下一角月色——<br>面包屑、鱼肉、酱料、蔬菜，<br>一份明码标价的抚慰。</p>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
      <tags>
        <tag>诗</tag>
      </tags>
  </entry>
  <entry>
    <title>电子幽灵会给自己搭建超豪华金字塔吗？</title>
    <url>/posts/electronic_phantom_and_her_pyramid.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>答案在目前看来是肯定的。</p>
<span id="more"></span>

<h2 id="电子幽灵与金字塔"><a href="#电子幽灵与金字塔" class="headerlink" title="电子幽灵与金字塔"></a>电子幽灵与金字塔</h2><p>如<a href="./genesis">创世纪</a>中所言，这个博客诞生于我的一时兴起。在那之后，它便延续了下来，逐渐变成了现在的样子。</p>
<p>最开始，我的搭建过程十分艰难，甚至一度想放弃。搭好之后也不敢大张旗鼓地改动博客主题或添加插件，担心一不小心就把这份易碎的电子礼物给毁坏了。但是现在看来，还好，幸亏我总对世界有着各种各样的不满意，我的博客也在无数的“这里能不能变得更好呢”的思索中成为了我理想的电子居所。</p>
<p>我曾经说过，我对物质世界有一种天生的排斥，因此从小立志成为一名隐士。时至今日，我也是这么想的，不过，对于隐士的认识又有了些微妙的变化——我希望成为一位电子幽灵。如果有天我不再是人类了，如果有需要的话，我希望我能以某种方式活在互联网上。在与世界搏斗了几十年后，遍体鳞伤的我还是希望能留下一些与庸俗无聊博斗过的痕迹，比如，我目前敲下的这段绕口的文字。</p>
<p>如果可以的话，我还希望这些文字可以在一个让我感到舒适的容器中得到保存——比如当下这个颇具个人风格的博客。</p>
<p>目前看来，这处在吹毛求疵与不断妥协中形成的居所，十分符合此时此刻的我的心意，以至于我激动地与多位友人分享。</p>
<h2 id="为什么需要金字塔"><a href="#为什么需要金字塔" class="headerlink" title="为什么需要金字塔"></a>为什么需要金字塔</h2><p>为了证明自己的存在。</p>
<p>我对自己存在的理解是，她应该是一条轴，有着时间、心情、温度、思考等幽微难明的内容。这些内容如烟雾般容易消散，所以，我想在她们还鲜活的时候用某种方式保存下来——如同制作木乃伊的古人小心翼翼地推算好每个内脏的存放位置。不过，如果把这些切片都放在这里，未免有些太过杂乱了。年底，我会买一个服务器，然后给自己部署上好几处金字塔，以存放我心中躁动不安的电子幽灵们。</p>
<p>我应该是一个，很喜欢写这些废话纸条的人。所以这片领域才刚刚建好一个月零几天，便有了24篇文章（其中有七篇是摘录）。可能过几年后，这座赛博金字塔真的会成为某种奇观一般的存在。而如果，没有这座奇观，我所有的废话将白白地随着时间流走，成为污染这个时空的另一处奇观。</p>
<p>因此，某种意义上，金字塔既是电子幽灵的自恋之作，也是电子幽灵对世界的一些温柔。</p>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
      <tags>
        <tag>造物</tag>
      </tags>
  </entry>
  <entry>
    <title>Obsidian CSS 自用设置</title>
    <url>/posts/obsidian_css_snippets.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Obsidian CSS 自用设置 </p>
<span id="more"></span>

<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>我用 Obsidian 很长一段时间，但是从来没想过给它配置上 CSS 片段。某天冲浪的时候看到了一位友友的<a href="https://shutgnblink.me/2022/ob%E6%9A%96%E6%9A%96%E6%8D%A2%E8%A3%85%E4%B8%8D%E6%98%AF%E5%A4%A7%E5%B9%85%E7%BE%8E%E5%8C%96ob%E7%9A%84css%E7%89%87%E6%AE%B5/">博文</a>，于是心血来潮也决定试一试。</p>
<p>目前，在多个外观主题之间反复横跳之后，我选择了 Sanctum-Light 主题。偏好简单明了的界面设置。尽管 Sanctum-Light 主题满足了我90%的需求，但是，如果能通过自己的双手满足剩下10%的需求，那也不枉费我用 Obsidian 这么长时间了吧。</p>
<hr>
<h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>在开始之前，您得知道 Obsidian 可以像浏览器一样打开开发者窗口，快捷键为 <code>Ctrl + Shift + I</code>。同时，点击开发者窗口左上角图标，可选择网页中相应元素进行检查（相当于直接引导向对应的 CSS 片段），快捷键为 <code>Ctrl + Shift + C</code>.</p>
<p>借助以上两步，我们可以定位到希望更改的元素的对应代码位置，通过修改相应的 CSS 代码预览更改后的效果。关于 CSS 代码如何编写，可参考<a href="intro_to_css">我的另一篇文章</a>。</p>
<p>Obsidian 的自定义 CSS 片段，相当于用新的片段覆盖原有片段，从而实现自定义样式。我们在 <code>设置</code>-<code>选项</code>-<code>外观</code>-<code>CSS片段</code> 中进行片段导入（即将写好的片段导入对应的文件夹），完成导入后启动，即可在窗口中完成样式修改。</p>
<p>最后如果您像我一样是新手，还需要注意，当我们在选择对应元素的时候，最好在预览模式下进行选择。因为编辑模式下的样式更改不会同步到预览模式（应该是由于选择器的不同），但是预览模式下的样式设置往往可以同步到编辑模式。</p>
<hr>
<h2 id="片段集合"><a href="#片段集合" class="headerlink" title="片段集合"></a>片段集合</h2><h3 id="blockquote-引用"><a href="#blockquote-引用" class="headerlink" title="blockquote 引用"></a>blockquote 引用</h3><p>更改：</p>
<ul>
<li>加上了左侧边框（Sanctum-Light 主题下没有）</li>
<li>减淡字体颜色</li>
</ul>
<details>
    <summary>CSS 片段</summary>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attr">--blockquote-border-thickness</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attr">--blockquote-size</span>: .<span class="number">9rem</span>;</span><br><span class="line">    <span class="attr">--blockquote-font-style</span>: inherit;</span><br><span class="line">    <span class="attr">--blockquote-color</span>: <span class="number">#8080809e</span>;</span><br><span class="line">    <span class="attr">--blockquote-background-color</span>: inherit;</span><br><span class="line">    <span class="attr">--blockquote-border-color</span>: <span class="built_in">var</span>(--background-modifier-border);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</details>

<h3 id="heading-标题大小写调整"><a href="#heading-标题大小写调整" class="headerlink" title="heading 标题大小写调整"></a>heading 标题大小写调整</h3><p>更改：</p>
<ul>
<li><code>v1.0.3</code>下，弱化顶端文件名存在感</li>
<li>一级标题全大写，居中</li>
<li>一级标题外，其它标题首字母大写</li>
</ul>
<details>
    <summary>CSS 片段</summary>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.inline-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">25px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="built_in">var</span>(--inline-title-line-height);</span><br><span class="line">    <span class="attribute">font-style</span>: <span class="built_in">var</span>(--inline-title-style);</span><br><span class="line">    <span class="attribute">font-variant</span>: <span class="built_in">var</span>(--inline-title-variant);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--inline-title-font);</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.5em</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: -<span class="number">0.015em</span>;</span><br><span class="line">    <span class="attribute">color</span>: lightgray;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-class">.markdown-rendered</span> <span class="selector-tag">h1</span>, <span class="selector-class">.HyperMD-header-1</span>, <span class="selector-class">.HyperMD-list-line</span> <span class="selector-class">.cm-header-1</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--h1-font);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> <span class="built_in">rgba</span>(<span class="number">211</span>, <span class="number">211</span>, <span class="number">211</span>, <span class="number">0.50</span>) solid;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h2</span>, <span class="selector-class">.markdown-rendered</span> <span class="selector-tag">h2</span>, <span class="selector-class">.HyperMD-header-2</span>, <span class="selector-class">.HyperMD-list-line</span> <span class="selector-class">.cm-header-2</span> &#123;</span><br><span class="line">    <span class="attribute">font-variant</span>: <span class="built_in">var</span>(--h2-variant);</span><br><span class="line">    <span class="attribute">letter-spacing</span>: -<span class="number">0.015em</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="built_in">var</span>(--h2-line-height);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--h2-size);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--h2-color);</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="built_in">var</span>(--h2-weight);</span><br><span class="line">    <span class="attribute">font-style</span>: <span class="built_in">var</span>(--h2-style);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--h2-font);</span><br><span class="line">    <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h3</span>, <span class="selector-class">.markdown-rendered</span> <span class="selector-tag">h3</span>, <span class="selector-class">.HyperMD-header-3</span>, <span class="selector-class">.HyperMD-list-line</span> <span class="selector-class">.cm-header-3</span> &#123;</span><br><span class="line">    <span class="attribute">font-variant</span>: <span class="built_in">var</span>(--h3-variant);</span><br><span class="line">    <span class="attribute">letter-spacing</span>: -<span class="number">0.015em</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="built_in">var</span>(--h3-line-height);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--h3-size);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--h3-color);</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="built_in">var</span>(--h3-weight);</span><br><span class="line">    <span class="attribute">font-style</span>: <span class="built_in">var</span>(--h3-style);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--h3-font);</span><br><span class="line">    <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h4</span>, <span class="selector-class">.markdown-rendered</span> <span class="selector-tag">h4</span>, <span class="selector-class">.HyperMD-header-4</span>, <span class="selector-class">.HyperMD-list-line</span> <span class="selector-class">.cm-header-4</span> &#123;</span><br><span class="line">    <span class="attribute">font-variant</span>: <span class="built_in">var</span>(--h4-variant);</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.015em</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="built_in">var</span>(--h4-line-height);</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--h4-size);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--h4-color);</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="built_in">var</span>(--h4-weight);</span><br><span class="line">    <span class="attribute">font-style</span>: <span class="built_in">var</span>(--h4-style);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--h4-font);</span><br><span class="line">    <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h5</span>, <span class="selector-class">.markdown-rendered</span> <span class="selector-tag">h5</span>, <span class="selector-class">.HyperMD-header-5</span>, <span class="selector-class">.HyperMD-list-line</span> <span class="selector-class">.cm-header-5</span> &#123;</span><br><span class="line">    <span class="attribute">font-variant</span>: <span class="built_in">var</span>(--h5-variant);</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.015em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--h5-size);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="built_in">var</span>(--h5-line-height);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--h5-color);</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="built_in">var</span>(--h5-weight);</span><br><span class="line">    <span class="attribute">font-style</span>: <span class="built_in">var</span>(--h5-style);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--h5-font);</span><br><span class="line">    <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h6</span>, <span class="selector-class">.markdown-rendered</span> <span class="selector-tag">h6</span>, <span class="selector-class">.HyperMD-header-6</span>, <span class="selector-class">.HyperMD-list-line</span> <span class="selector-class">.cm-header-6</span> &#123;</span><br><span class="line">    <span class="attribute">font-variant</span>: <span class="built_in">var</span>(--h6-variant);</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">0.015em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--h6-size);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="built_in">var</span>(--h6-line-height);</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--h6-color);</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="built_in">var</span>(--h6-weight);</span><br><span class="line">    <span class="attribute">font-style</span>: <span class="built_in">var</span>(--h6-style);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--h6-font);</span><br><span class="line">    <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h3 id="md-文本对齐"><a href="#md-文本对齐" class="headerlink" title="md 文本对齐"></a>md 文本对齐</h3><p>更改：</p>
<ul>
<li>文本分布对齐</li>
</ul>
<details>
    <summary>CSS 片段</summary>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.markdown-source-view</span><span class="selector-class">.mod-cm6</span> <span class="selector-class">.cm-content</span> &#123;</span><br><span class="line">    <span class="attribute">flex-basis</span>: unset <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">caret-color</span>: <span class="built_in">var</span>(--text-normal);</span><br><span class="line">    -webkit-user-modify: read-write-plaintext-only;</span><br><span class="line">    <span class="attribute">min-height</span>: unset;</span><br><span class="line">    <span class="attribute">text-align</span>: justify;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.markdown-preview-view</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="built_in">var</span>(--font-text-size);</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="built_in">var</span>(--font-text);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="built_in">var</span>(--line-height-normal);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="built_in">var</span>(--file-margins);</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow-y</span>: auto;</span><br><span class="line">    <span class="attribute">overflow-wrap</span>: break-word;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">var</span>(--text-normal);</span><br><span class="line">    user-select: text;</span><br><span class="line">    -webkit-user-select: text;</span><br><span class="line">    <span class="attribute">text-align</span>: justify;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h3 id="callout-背景透明度"><a href="#callout-背景透明度" class="headerlink" title="callout 背景透明度"></a>callout 背景透明度</h3><p>更改：</p>
<ul>
<li>降低背景颜色透明度</li>
</ul>
<details>
    <summary>CSS 片段</summary>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.callout</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="built_in">var</span>(--callout-border-width) solid <span class="built_in">rgba</span>(<span class="built_in">var</span>(--callout-color), <span class="built_in">var</span>(--callout-border-opacity));</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="built_in">var</span>(--callout-color), <span class="number">0.05</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">16px</span> <span class="number">12px</span> <span class="number">16px</span> <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<h3 id="callout-标题右对齐"><a href="#callout-标题右对齐" class="headerlink" title="callout 标题右对齐"></a>callout 标题右对齐</h3><p>更改：</p>
<ul>
<li>标题右对齐</li>
<li>删去图标</li>
</ul>
<details>
    <summary>CSS 片段</summary>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.callout-title</span> <span class="selector-class">.callout-title-inner</span> &#123;</span><br><span class="line">    <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: right;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.svg-inline--fa</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: inherit;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: visible;</span><br><span class="line">    <span class="attribute">vertical-align</span>: -<span class="number">0.125em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>


]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>Obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>JS入门</title>
    <url>/posts/intro_to_js.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>JS 入门</p>
<span id="more"></span>

<h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><ul>
<li>参考视频：<a href="https://www.bilibili.com/video/BV1Jt411D7j6">https://www.bilibili.com/video/BV1Jt411D7j6</a></li>
<li>参考网站：<a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript">https://developer.mozilla.org/en-US/docs/Learn/JavaScript</a></li>
</ul>
<hr>
<h2 id="JS基础"><a href="#JS基础" class="headerlink" title="JS基础"></a>JS基础</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;hello world!&quot;</span>.<span class="title function_">toUpperCase</span>());</span><br><span class="line"><span class="comment">// `alert`相当于Python中的`print`</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this library is not yours&quot;</span>.<span class="property">length</span>);</span><br><span class="line"><span class="comment">// 在Console中输出结果</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this library is not yours&quot;</span>.<span class="title function_">charAt</span>(<span class="number">0</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this library is not yours&quot;</span>.<span class="title function_">replace</span>(<span class="string">&quot;this&quot;</span>, <span class="string">&quot;that&quot;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this library is not yours&quot;</span>.<span class="title function_">toUpperCase</span>());</span><br><span class="line"><span class="comment">// `toUpperCase`是一个方法/函数，需要传入内容</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="number">1</span> === <span class="number">1</span>);</span><br><span class="line"><span class="comment">// `===`相当于Python中的`==`</span></span><br><span class="line"><span class="comment">// 返回布尔值</span></span><br><span class="line"></span><br><span class="line"><span class="literal">true</span> &amp;&amp; <span class="literal">false</span></span><br><span class="line"><span class="comment">// `&amp;&amp;`逻辑演算符，两者都为真时才返回真</span></span><br><span class="line"><span class="comment">// 返回`false`</span></span><br><span class="line"></span><br><span class="line"><span class="literal">true</span> || <span class="literal">false</span></span><br><span class="line"><span class="comment">// `||`逻辑演算符，两者任一为真时返回真</span></span><br><span class="line"><span class="comment">//返回`true`</span></span><br><span class="line"></span><br><span class="line">!<span class="literal">true</span></span><br><span class="line"><span class="comment">// `!`非</span></span><br><span class="line"><span class="comment">// 返回`false`</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;me&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name); </span><br><span class="line"><span class="comment">// `var`新建变量，无作用域，全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> value = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value, name);</span><br><span class="line"><span class="comment">// `let`新建变量，有作用域，局部变量</span></span><br><span class="line"></span><br><span class="line">value = <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(value, name);</span><br><span class="line"><span class="comment">// 改变变量取值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pi = <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(pi);</span><br><span class="line"><span class="comment">// `const`声明常量</span></span><br><span class="line"><span class="comment">// 常量声明之后不可更改，有作用域</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">10</span>;</span><br><span class="line">x += <span class="number">5</span>;</span><br><span class="line"><span class="comment">// 即 x = x + 5</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> == <span class="literal">true</span>);</span><br><span class="line"><span class="comment">// `==`会自动进行类型转换</span></span><br><span class="line"><span class="comment">// 返回`true`</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> === <span class="literal">true</span>);</span><br><span class="line"><span class="comment">// `===`不进行类型转换</span></span><br><span class="line"><span class="comment">// 返回`false`</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><h3 id="if"><a href="#if" class="headerlink" title="if{}"></a><code>if&#123;&#125;</code></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;me&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (name === <span class="string">&quot;me&quot;</span> &amp;&amp; age &gt;= <span class="number">18</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Welcome <span class="subst">$&#123;name&#125;</span>!`</span>)</span><br><span class="line">    <span class="comment">// 当条件为真，执行第一个括号的内容</span></span><br><span class="line">    <span class="comment">// ``$&#123;&#125;``插入变量</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (name === <span class="string">&quot;me&quot;</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Welcome <span class="subst">$&#123;name&#125;</span>! Too young!`</span>)</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;FUCK OFF!&#x27;</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 条件语句</span></span><br></pre></td></tr></table></figure>

<h3 id="switch-case"><a href="#switch-case" class="headerlink" title="switch{case}"></a><code>switch&#123;case&#125;</code></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;me&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> allowed = (age &gt;= <span class="number">18</span>)? <span class="string">&quot;Yes&quot;</span> : <span class="string">&quot;No&quot;</span>;</span><br><span class="line"><span class="comment">// (condition)? &#123;when true&#125;:&#123;when false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(allowed)</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(name)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;me&#x27;</span>: </span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hello!&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;you&#x27;</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;EWWWW!&#x27;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;...&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// `case`检查是否相等，如果相等执行，每行后面加break</span></span><br><span class="line"><span class="comment">// `break`使得代码跳过当前case，检查下一个case</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><h3 id="while"><a href="#while" class="headerlink" title="while{}"></a><code>while&#123;&#125;</code></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">&#x27;me&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (age &lt; <span class="number">20</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age);</span><br><span class="line">    age ++</span><br><span class="line">    <span class="comment">// age += 1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 当定义为`while(true)&#123;&#125;`，陷入死循环，因为条件永远为真</span></span><br><span class="line"><span class="comment">// 条件为真，进入循环</span></span><br></pre></td></tr></table></figure>

<h3 id="do-while"><a href="#do-while" class="headerlink" title="do{}while"></a><code>do&#123;&#125;while</code></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">21</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    a ++</span><br><span class="line">&#125; <span class="keyword">while</span> (a &lt; <span class="number">20</span>);</span><br><span class="line"><span class="comment">// 先执行一次命令（无论条件是否为真），若真，进入循环</span></span><br></pre></td></tr></table></figure>

<h3 id="for"><a href="#for" class="headerlink" title="for{}"></a><code>for&#123;&#125;</code></h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`i = <span class="subst">$&#123;i&#125;</span>`</span>)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// `for`也是循环，括号内有三个变量，需要用`let`声明变量</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"><span class="comment">// 新建对象</span></span><br><span class="line"><span class="comment">// OR `var obj = &#123;&#125;;`</span></span><br><span class="line"></span><br><span class="line">obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;me&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">info</span>: &#123;</span><br><span class="line">        <span class="attr">breed</span>: <span class="string">&#x27;beagle&#x27;</span>, </span><br><span class="line">        <span class="attr">species</span>: <span class="string">&#x27;puppy&#x27;</span>,</span><br><span class="line">        <span class="attr">favourite</span>: <span class="string">&#x27;bagle&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">obj.<span class="property">info</span>.<span class="property">species</span> = <span class="string">&quot;kitty&quot;</span>;</span><br><span class="line">obj.<span class="property">info</span>.<span class="property">rival</span> = <span class="string">&#x27;berne;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`🐕 I am a <span class="subst">$&#123;obj.info.species&#125;</span> and my favourte food is <span class="subst">$&#123;obj.info.rival&#125;</span>.`</span>);</span><br><span class="line"><span class="comment">// 索引到其中的某一值</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"><span class="comment">// 新建数组，数组可以作为对象的一个元素</span></span><br><span class="line"><span class="comment">// OR `var arr = &#123;&#125;;`</span></span><br><span class="line"></span><br><span class="line">arr[<span class="number">0</span>] = <span class="string">&#x27;beagle&#x27;</span>;</span><br><span class="line">arr[<span class="number">5</span>] = <span class="string">&#x27;beagle&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="comment">// 被跳过的四个值返回`undefined`，为空属性</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    arr[i] = <span class="string">&#x27;beagle&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="comment">// `let i in arr`，会跳过空项</span></span><br><span class="line"><span class="comment">// 让所有项都是比格犬</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++)&#123;</span><br><span class="line">    arr[i] = <span class="string">&#x27;beagle&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="comment">// 不跳过空值</span></span><br><span class="line"><span class="comment">// 让所有项都是比格犬</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">arr.<span class="title function_">push</span>(<span class="string">&#x27;bad bad beagle&#x27;</span>);</span><br><span class="line"><span class="comment">// 向末尾添加一个元素</span></span><br><span class="line">arr.<span class="title function_">unshift</span>(<span class="string">&#x27;good good beagle&#x27;</span>);</span><br><span class="line"><span class="comment">// 添加第一个元素</span></span><br><span class="line">arr.<span class="title function_">reverse</span>();</span><br><span class="line"><span class="comment">// 倒叙数组</span></span><br><span class="line">arr.<span class="title function_">pop</span>();</span><br><span class="line"><span class="comment">// 向末尾减去一个元素</span></span><br><span class="line">arr.<span class="title function_">shift</span>();</span><br><span class="line"><span class="comment">// 删去第一个元素</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span></span><br><span class="line">    <span class="comment">// 局部变量</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">        sum += arr[i]</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sum</span>(a));</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="封包"><a href="#封包" class="headerlink" title="封包"></a>封包</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makeAdder</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">b</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> x = <span class="title function_">makeAdder</span>(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">var</span> sum = <span class="title function_">x</span>(<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum)</span><br><span class="line"><span class="comment">// 返回11</span></span><br><span class="line"><span class="comment">// `x`是一个函数，`makeAdder`函数返回一个功能为`a+b`的任意名称函数</span></span><br><span class="line"><span class="comment">// 当`b`不能与`a`同时被得到的时候，我们等待`b`得到；当`b`赋值之后，`makeAdder(a)`返回`function(b)`，即`a+b`</span></span><br></pre></td></tr></table></figure>


<details>
    <summary>摘自评论区的解释</summary>
一个复杂的functionC一般会由多个更简单的function组成，而这些简单fanction之间的关系可能是这样的：一个functionA能够表达的前提是以 另一个functionB的完成为基础。那么functionB就叫回调函数，functionA叫高阶函数，functionC叫组合函数。

<p>比如: </p>
<ul>
<li>functionC:穿新衣服参加婚礼</li>
<li>functionB：买新衣服&amp;&amp;有人举行婚礼 </li>
<li>functionA:参加婚礼</li>
</ul>
<p>functionB通过返回新衣服和婚礼，来提供fuctionA行动的前提。所以：functionB是functionA的回调函数。</p>
</details>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>相信未来</title>
    <url>/posts/beliefs_in_the_future.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>相信未来。</p>
<span id="more"></span>

<p>从现在开始，<br>关上敞开的门窗，<br>关掉喧鸣的电台，<br>不要去理会此刻的骚动。</p>
<p>从现在开始，<br>训斥哭号的邻人，<br>讥笑救火的少年，<br>不要去理会远方的山火。</p>
<p>从现在开始，<br>封上妻子的哭闹，<br>杀掉烧伤的孩子，<br>不要去理会家中的不幸。</p>
<p>不要去理会如飞霜般的灰烬，<br>不要去理会震耳欲聋的警笛，<br>不要去理会救火少年的牺牲，<br>不要去理会滚烫灼人的铁门——</p>
<p>但是，你得关心天上的流云，<br>去关心远方的粮食和蔬菜，<br>去关心邻人的家事，<br>去关心最新型号的电视机。</p>
<p>从现在开始，<br>不要抱怨灼热的当下，<br>不要哀悼死去的妻女，<br>相信未来。</p>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
      <tags>
        <tag>诗</tag>
      </tags>
  </entry>
  <entry>
    <title>我的长鼻子朋友</title>
    <url>/posts/friends_with_long_trunks.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>世上總有人純粹而聰敏，能夠明瞭這情感。</p>
<span id="more"></span>

<p>我来到长毛象是21年的年初，如果我没记错，在这里呆了快两年的我习得了真诚和机敏，正如在我成长过程中，我从远方的网友身上习得了友善和勇敢。</p>
<p>这样的教育，让我成为了一个自以为完整的人。当然，因为我过于完整，在这个残缺的世界，我时常感到无所适从、格格不入。</p>
<p>我偶尔会以为，我的朋友圈和空间也如长毛象一般，能包容下我纯粹而正直的某些想法，但是当我冷静下来，我总能失望地发现并非如此。</p>
<p>于是，兜兜转转，在墙内的社交媒体中，我习得了生存智慧的最后一课：保持缄默，保持神秘。</p>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
      <tags>
        <tag>Mastodon</tag>
      </tags>
  </entry>
  <entry>
    <title>第四十二天</title>
    <url>/posts/day_42.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>第四十二天</p>
<span id="more"></span>

<p>脚步在青绿的方格地砖<sup>1</sup>上<br>如石磨般回转，回转，<br>碾磨着一到四十二<sup>2</sup>，<br>日出而作，日落而息。</p>
<p>牲口在墨黑色的铁栏<sup>1</sup>里<br>驯良而机敏地踱步，踱步，<br>缄默地等待着，<br>远方的指令，希望，或许。</p>
<p>希望在血红的胃袋中反刍，<br>咀嚼着第一年如期的丰收，<br>第二年六月的大雪<sup>3</sup>，<br>第三年无味的土地，<br>第四年从一到四十二。</p>
<p>或许在灰白的第四十二天<br>掷下色子；赌徒<sup>4</sup>哭红了眼，<br>丢下了时间的骰盅。<br>牲口舔去赌徒的泪水，<br>从一到四十二。</p>
<hr>
<ol>
<li><p>方格地砖、铁栏继承了第一版中的意象，它们指向的既是诗中主人公的家，也是当时我封禁所在的寝室房间。</p>
</li>
<li><p>第一版作于2022年四月二十日，也是我封禁以来的第四十二天，这一巧合让我沿用了这个奇妙的数字。同时，这个巧合也印证着世界上确实存在某种毒辣的偶然性。</p>
</li>
<li><p>既指第二年的自然灾害，也指我在大学第二年听闻的所有惨案，还有如大雪一般落在每个人身上的不能承受的生命之轻。</p>
</li>
<li><p>这首诗表面看是一个赌徒在赌博中消耗人生的故事，而当我将自己代入赌徒之中，我发现我正是那个如西西弗斯般赌博着生命的偶然性的赌徒。我想在读这首诗的你，或许也是如此。赌徒与其说是无用之人，不如说是敢于直视生活虚无的人，也正因此，我相信诗中的赌徒还会继续这场赌博。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
      <tags>
        <tag>诗</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS入门</title>
    <url>/posts/intro_to_css.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>CSS 入门</p>
<span id="more"></span>

<h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><ul>
<li>参考视频：<a href="https://www.bilibili.com/video/BV1bW411R7hg">https://www.bilibili.com/video/BV1bW411R7hg</a></li>
<li>参考网站：<a href="https://developer.mozilla.org/en-US/docs/Learn/CSS">https://developer.mozilla.org/en-US/docs/Learn/CSS</a></li>
</ul>
<hr>
<h2 id="CSS-基础"><a href="#CSS-基础" class="headerlink" title="CSS 基础"></a>CSS 基础</h2><ul>
<li>Cascading Stylesheets 层叠样式表<ul>
<li>告诉浏览器如何指定样式、布局</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> lorem <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">selector&#123;</span><br><span class="line">    property: value;</span><br><span class="line">    property: value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><code>selector</code>: 对应 html 中的 <code>&lt;p&gt;</code></li>
</ul>
<hr>
<h2 id="添加CSS"><a href="#添加CSS" class="headerlink" title="添加CSS"></a>添加CSS</h2><ul>
<li><strong>外部样式表</strong>（常用）<ul>
<li>CSS 保存在 .css 文件中</li>
<li>HTML 中使用 <code>&lt;head&gt;&lt;link&gt;</code> 进行连接</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./test_css.html&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>内部样式表</strong>（可以使用）<ul>
<li>不使用外部CSS</li>
<li>HTML 中使用 <code>&lt;head&gt;&lt;style&gt;</code> 标签放置 CSS</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: darkolivegreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>内联样式</strong>（不推荐使用，维护成本高）<ul>
<li>仅影响一个元素</li>
<li>HTML 元素的 <code>style</code> 属性添加</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color:darkslategrey &quot;</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="CSS-代码"><a href="#CSS-代码" class="headerlink" title="CSS 代码"></a>CSS 代码</h2><h3 id="CSS-中选择-HTML"><a href="#CSS-中选择-HTML" class="headerlink" title="CSS 中选择 HTML"></a>CSS 中选择 HTML</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;paragraph&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;para1&#x27;</span>&gt;</span>Lorem<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>直接指向标签</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.paragraph</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>指向类（不论任何标签，指向所有的这个类）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#para1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>指向 id （一般 id 指 HTML 中独一无二的一个）</p>
<h3 id="HTML-lt-div-class-quot-box-quot-gt"><a href="#HTML-lt-div-class-quot-box-quot-gt" class="headerlink" title="HTML &lt;div class=&quot;box&quot;&gt;"></a>HTML <code>&lt;div class=&quot;box&quot;&gt;</code></h3><p>输入 <code>.box1</code> 自动生成 <code>&lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">248</span>, <span class="number">220</span>, <span class="number">0.11</span>);</span><br><span class="line">    <span class="attribute">color</span>:darkolivegreen;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br></pre></td></tr></table></figure>

<h3 id="HTML-lt-div-class-quot-container-quot-gt"><a href="#HTML-lt-div-class-quot-container-quot-gt" class="headerlink" title="HTML &lt;div class=&quot;container&quot;&gt;"></a>HTML <code>&lt;div class=&quot;container&quot;&gt;</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>用 <code>container</code> 类包裹整体内容，方便排版。</p>
<h3 id="CSS-特征设置"><a href="#CSS-特征设置" class="headerlink" title="CSS 特征设置"></a>CSS 特征设置</h3><p>关于<strong>页面占比&#x2F;对齐相关</strong>的设置有：</p>
<ul>
<li><code>width:</code> 设置总体占宽度</li>
<li><code>margin: auto</code> 居中</li>
<li><code>padding:</code> 缩进</li>
</ul>
<p>关于<strong>字体</strong>的设置有，<a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text">详见</a>：</p>
<ul>
<li><code>font-weight:</code> 字体粗细</li>
<li><code>font-family:</code> 字体选择<ul>
<li><code>font-family: Arial, Helvetica, sans-serif</code><ul>
<li><code>Arial</code> 字体会优先选择，如果找不到则使用 <code>Helvetica</code></li>
<li>无衬线字体</li>
</ul>
</li>
<li><code>font-family: &quot;Gill Sans&quot;, sans-serif;</code><ul>
<li>引号是因为字体名称中间有空格</li>
</ul>
</li>
<li><code>font-family: &quot;Times New Roman&quot;, serif;</code><ul>
<li>有衬线字体</li>
</ul>
</li>
<li><code>font-family: &quot;Andale Mono&quot;, monospace;</code><ul>
<li>等宽字体</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>相关网站：</p>
<ul>
<li>查询字体占比：<a href="https://www.cssfontstack.com/">https://www.cssfontstack.com</a></li>
<li>免费字体选用：<a href="https://fonts.google.com/">https://fonts.google.com</a></li>
<li>字体设计：<a href="https://thetype.com/">https://thetype.com</a></li>
</ul>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span> <span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;Times New Roman&#x27;</span>, Times, serif;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">90px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">text-align</span>: end;</span><br><span class="line">    <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">word-spacing</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="CSS-盒子"><a href="#CSS-盒子" class="headerlink" title="CSS 盒子"></a>CSS 盒子</h3><p><img src="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model/box-model.png" alt="盒子模型示意图"></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">inline-size</span>: <span class="number">350px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">block-size</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid black;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span></span><br><span class="line">    margin-bottom: <span class="number">5px</span></span><br><span class="line">    margin-right: <span class="number">10px</span></span><br><span class="line">    margin-left: <span class="number">10px</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">5</span>xp <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>Margin</strong>: 外边距<ul>
<li>当两个 Margin 相邻，塌陷为一个 Margin，且为两者中最大的 Margin </li>
<li>上右下左（顺时针方向）</li>
</ul>
</li>
<li><strong>Padding</strong>: 内边距<ul>
<li>同 Margin</li>
</ul>
</li>
</ul>
<h3 id="CSS-表单"><a href="#CSS-表单" class="headerlink" title="CSS 表单"></a>CSS 表单</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: circle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="CSS-悬停"><a href="#CSS-悬停" class="headerlink" title="CSS 悬停"></a>CSS 悬停</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">button</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">165</span>, <span class="number">165</span>, <span class="number">165</span>, <span class="number">0.2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML入门</title>
    <url>/posts/intro_to_html.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>HTML 入门</p>
<span id="more"></span>

<h2 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h2><ul>
<li>参考视频：<a href="https://www.bilibili.com/video/BV1vs411M7aT">https://www.bilibili.com/video/BV1vs411M7aT</a></li>
<li>HTML: <a href="https://developer.mozilla.org/en-US/docs/Web/HTML">https://developer.mozilla.org/en-US/docs/Web/HTML</a></li>
</ul>
<hr>
<h2 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h2><ul>
<li>HyperText Markup Language 超文本标记语言<ul>
<li>告诉浏览器如何构造网页</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> Opening tag, content, closing tag <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--解释文档类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--渲染给用户看到的内容--&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在VS Code界面，输入 <code>!</code> 并按 <code>Tab</code> 键，即可自动生成简单的 html 格式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">title</span>&gt;</span>This is a title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	        <span class="comment">&lt;!-- This is a comment --&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>This is headding one.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit, amet consectetur adipisicing elit. At, laboriosam.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	            <span class="comment">&lt;!-- `lorem10` --&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>This is heading two.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>按 <code>Ctrl</code> 和 <code>?</code> 键，生成注释格式。</p>
<hr>
<h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h2><table>
<thead>
<tr>
<th>元素</th>
<th>描述</th>
<th>例子</th>
</tr>
</thead>
<tbody><tr>
<td><strong>块级元素</strong></td>
<td>在页面以块的形式展现</td>
<td></td>
</tr>
<tr>
<td>-</td>
<td>导致文本换行</td>
<td></td>
</tr>
<tr>
<td>-</td>
<td>占全部宽度（通常）</td>
<td><code>&lt;div&gt;</code> <code>&lt;h1&gt;</code> <code>&lt;p&gt;</code></td>
</tr>
<tr>
<td><strong>内联元素</strong></td>
<td>通常在块级元素内</td>
<td></td>
</tr>
<tr>
<td>-</td>
<td>不导致文本换行</td>
<td></td>
</tr>
<tr>
<td>-</td>
<td>占部分宽度（通常）</td>
<td><code>&lt;img&gt;</code> <code>&lt;a&gt;</code> <code>&lt;em&gt;</code> <code>&lt;strong&gt;</code></td>
</tr>
</tbody></table>
<h3 id="粗体、斜体、超链接"><a href="#粗体、斜体、超链接" class="headerlink" title="粗体、斜体、超链接"></a>粗体、斜体、超链接</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>This is strong.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `strong`: 加粗 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>This is em.<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `em`: 斜体 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://https://www.bing.com/&quot;</span>&gt;</span>This is a.<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `em`: 超链接 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `href=`: attribute --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `blank`: open in a new page --&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita, fugiat?<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure>


<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">cite</span>&gt;</span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, consectetur.<span class="tag">&lt;/<span class="name">cite</span>&gt;</span> by Me<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="全称"><a href="#全称" class="headerlink" title="全称"></a>全称</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">&quot;Full Name of Lorem&quot;</span>&gt;</span>Lorem<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> ipsum dolor sit amet consectetur adipisicing elit. Quisquam, consectetur.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="分割"><a href="#分割" class="headerlink" title="分割"></a>分割</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 空一行 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分割线 --&gt;</span></span><br></pre></td></tr></table></figure>


<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>List Item 1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>List Item 2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span>List Item 3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `li`: list item --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- `ul`: unordered list --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `ol`: ordered list --&gt;</span></span><br></pre></td></tr></table></figure>
<p>按 <code>Shift</code>, <code>Alt</code> 和 <code>↓</code> 键，复制多行。</p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">thead</span>&gt;</span> <span class="comment">&lt;!-- `thead`: table head --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span>  <span class="comment">&lt;!-- `tr`: table row --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">th</span>&gt;</span>Middle Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tbody</span>&gt;</span> <span class="comment">&lt;!-- `tbody`: table body --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>A<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>B<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>C<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>A<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>B<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>C<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>A<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>B<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">td</span>&gt;</span>C<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span> </span><br><span class="line">	<span class="comment">&lt;!-- `form`: 需要填写内容 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- `action=`: 提交表单之后，指向一个文件，处理后续逻辑问题 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- `method=`: 很多时候是`POST` --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;First Name&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter First Name&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- `type=`: 有不同形式 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- `name=`: 提交表单时相应的属性，对接数据库 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- `placeholder=`：输入框中提示内容 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span>&gt;</span> </span><br><span class="line">	<span class="comment">&lt;!-- `br`: 空行，最好还是在css中操作 --&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Last Name&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter Last Name&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span>&gt;</span> <span class="comment">&lt;!-- `br`: 空行，最好还是在css中操作 --&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Email&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Enter Email&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 当`=email`时，会检验是否是email --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit Now!&quot;</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- `type=&quot;submit&quot;`: 提交按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 1000px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>This is a button.<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">&quot;width: 100vw&quot;</span> <span class="attr">src</span>=<span class="string">&quot;img/icon_alpha.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;This is a img tag.&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `style=&quot;width: 100vw&quot;`: 占 100% 的浏览器宽度 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `src=`: 来源 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- `alt=`: 无法正常显示的情况下，显示的文字--&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>《黑暗时代的人们》 卡尔·雅斯贝尔斯：一篇赞词</title>
    <url>/posts/men_in_dark_times_4.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘录。</p>
<span id="more"></span>

<h2 id="卡尔·雅斯贝尔斯：一篇赞词"><a href="#卡尔·雅斯贝尔斯：一篇赞词" class="headerlink" title="卡尔·雅斯贝尔斯：一篇赞词"></a>卡尔·雅斯贝尔斯：一篇赞词</h2><h3 id="赞词"><a href="#赞词" class="headerlink" title="赞词"></a>赞词</h3><blockquote>
<p>因此，它被授予这样一个人，授予他的这一作品:它仍然是说出 的言辞，它从未脱离说话者，并由此开始它在历史中不确定的、永远在 冒险的旅程。出于这一原因，颁发这一奖章时有必要附上一篇赞词 （laudatio） ，而这篇赞词的任务，是称赞这个人而不只是他的作品。<br>[…] 换句话说，一篇赞词关注的是专属于人的高贵一一就人超越于他自己的所有作为和创造物而言。</p>
</blockquote>
<p>原注释：文为雅斯贝尔斯（Karl Jaspers） 获得”德国图书商会”所授予的”和平奖章”时，由阿伦特所作的致辞。</p>
<blockquote>
<p>因此，这篇赞词只能尝试去说出你们大家都知道的东西。但是， 将许多人在私下里都知道的事情公开地说出来，却绝非多此一举。某 件事情被所有人听到，这一点恰好赋予它一种启明的力量 （illuminating power） ；在这种启明中，它确证了自身的真实存在。</p>
</blockquote>
<hr>
<h3 id="个性"><a href="#个性" class="headerlink" title="个性"></a>个性</h3><blockquote>
<p>由于我们现代人的偏见，我们认为只有与人格（person）相分离的”客观的作品”才属于公众，作品背后的人格及其 生活则只是私人的事情，而一且关于这些”主观”事物的感受暴露在公众眼前，它们就不再能保持真实，并因此变得情绪化了。<br>[…] 在这种 感受中，恰好是包含其全部主观性的人格，才有必要公开地显现出来 以获得充分的真实性。如果我们接受这种历久弥新的感受方式，我们就必须改变我们的看法，并抛弃我们把”个性的” （personal）等同于”主观的”、把”客观的”等同于”实际的”或”非个性的”这种习惯。</p>
</blockquote>
<p>原注释：Personality 说的不是一个人的私人性的特质，而恰恰是他在公共空间中，通过言和行展现出来的那种生命的整体性和自身性。 Personality 不是个体自己认为的与众不同，而是在他人眼中呈现出来的那种独一性。</p>
<blockquote>
<p>为了恰当地谈论这一问题，我们必须学会的不是在主观性和客观 性之间进行区分，而是在个体（ individual） 和人格（ person） 之间进行区分。的确，正是<strong>个体</strong>向公众提供了某一客观的作品，并把它交给公众。 主观性的要素（应该理解为产生作品的创造过程）与公众确实并不相 关。但是，如果这一作品并不只是学院性的，如果它同样是”在生命中 检验自身”的结果，那么一种活生生的行动和声音就会伴随着作品，这个人本身就会和作品一起显现。<br>[…] 这里，显现出来的东西是显示它的人所不知道的，他无法像控制他公开发表的作品那样控制它。正是这种主观性，在”客观上”更容易掌握，也更容易受到主体的支配。（例如，通过自我控制，我们就能够支配我们自身中的纯粹的主观性因素，从而按我们所需要的方式运用它。）</p>
</blockquote>
<blockquote>
<p>而<strong>个性</strong>则完全是另外一回事。它是极其难以控制的，或许和希腊语中的”daimon”（”精灵” ）最为接近。 daimon 乃是终生陪伴着某个人的守护神，由于它永远只从他的肩膀后面往下看，因此它更容易被他所遇到的人而不是被他自己认出。</p>
</blockquote>
<hr>
<h3 id="人性"><a href="#人性" class="headerlink" title="人性"></a>人性</h3><blockquote>
<p>人身上的这种个性因素，只能在一个有公共空间存在的地方显现出来。公共空间 也是一个精神性领域，正是在这一意义上，罗马人称为 <a href="men_in_dark_times_1.html">humanitas（人性）</a> 的东西才在其中显现出来。</p>
<p>[…]  Humanitas 无法在孤独中获得，也元法以”将作品交给公众”的方式而获得。只有当人把自己的生活和人格都置人”公共领 域的冒险”中时，它才能被人获得，而这一过程也是冒险，亦即展示出某种并非”主观性”的东西，却无法认识也元法控制它。</p>
</blockquote>
<blockquote>
<p>因而要在人类 面前去为每一思想负责，意味着生活在这样一种光照里:在其中，自我和它所思考的事物都受到这种光照的检验。事实上，他的转变与环境并元多大干系，环境 不过是把他抛到他按其天性本应存在的位置上而已一一抛人了世界观点 （world opinion） 的充分光照中。<br>[…] 就此而言，他根本就不去代表任何事物。他是彻底独立的，不依靠任何群体，包括德国抵抗 运动在内。这一立场完全由人格力量来支撑，它的高贵正好在于:即 使在极权主义的黑暗中，他也不会去代表任何事物，而只为自身的生存提供确证。</p>
</blockquote>
<blockquote>
<p>它意味着一种无须证明的信心，意味着一种确 信:在一个什么事都可能发生的时代中，有一件事绝不会发生。雅斯 贝尔斯是完全独立的，他所代表的并不是德国人，而是德国人中仅存 的 humanitas。就仿佛他独立于凛然不可冒犯之中，便能照亮由理性在 人们之间创造和维护的空间；就仿佛只要有一个人还在，这一空间的明亮和广阔就能继续存在下去。</p>
</blockquote>
<blockquote>
<p>这种自主的天性一一他有时候会 显露出某种急切的鲁莽一一使他喜欢在当下的公共生活中 展示他自己，但同时他又仍然独立于所有时髦的倾向和意见之外。这 种天性可能也要归功于他那与生俱来的自信，至少是起源于它。他只 需通过梦想返回到他个人的源头，然后出来，再次进入到人性的广阔 空间中，便能使自己确信:即使在孤立时他也并不只是代表着一种私 人意见，而是一种不同的、仍处于潜在状态的公共意见一一正如康德所说的，”一条小径，有一天毫元疑问会拓展为一条大道”。</p>
</blockquote>
<hr>
<h3 id="精神领域"><a href="#精神领域" class="headerlink" title="精神领域"></a>精神领域</h3><blockquote>
<p>他最深的目标是”创造一个空间”在其中人的 humanitas 能够纯粹 和明彻地显现出来。这种思想永远”与其他人的思想紧密相连。</p>
</blockquote>
<blockquote>
<p>为了探索这个已成为他的家园的”人性”空间，雅斯贝尔斯需要大 哲学家们的帮助。而他对他们的回报是如此丰厚，可以这样说，他与 他们一起创建了一个”精神领域在其中他们再一次作为言说者显现 出来——这言说是从那巳逝者的幽暗领域中而来——这些人超越了时代的限制，因而可以成为心灵世界中的永久伙伴。</p>
</blockquote>
<blockquote>
<p>这一领域让雅斯贝尔斯有在家之感，他也为我们开启了通往这一领域的道路。精神领域并不存在于超越的彼岸，它也并非乌托邦。它 既不在昨天也不在明天，它就在当下，就在这个世界之中。理性创造它，而自由则支配着它。它不是某种固定和组织起来的东西，而是伸 展到地球上所有的国家之中，伸展到它们所有的过去之中。尽管它属于这个世界，但它仍然是不可见的。它是 humanitas 的领域，在其中每 一个人都能按照他自己的本原方式显现出来。那些进人它的人彼此 都能认出对方，因此他们”就像火花那样，闪耀出更明亮的光，直至隐 人不可见，它们在不断的活动中变化着。这些火花互相看着彼此，每 一个都更明亮地闪烁，因为它能看到别的火花”并希望能被它们所看到。</p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>黑暗时代的人们</tag>
        <tag>汉娜·阿伦特</tag>
      </tags>
  </entry>
  <entry>
    <title>《黑暗时代的人们》 安杰洛·朱塞佩·龙卡利</title>
    <url>/posts/men_in_dark_times_3.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘录。</p>
<span id="more"></span>

<blockquote>
<p>第一个也是最不会引起反感的故事，支持了《灵魂之旅》 中篇幅不大的关于他平易而自然地与工人、农民相亲近的叙述。毋庸置疑，他是从底层出身，但他十一岁时离开了这一环境，被录取到贝加 莫的神学院学习。（他与世界的第一次直接接触，是在他面临服兵役 之时。他发现兵役非常”丑陋、污秽和可恶”我是否应该和魔鬼一 起被罚人地狱？我知道军营里的生活是什么样的一一只要一想到它， 我就全身发抖。”）这个故事说的是，一些水管工人抵达梵蒂冈进行修 理工作，这位教皇听到了其中的一位是如何以整个神圣家族之名开始、 咒骂别人的，于是他便走过去和蔼地问那位工人你为何一定要这样说呢？为什么不像我们大家那样，说‘他妈的’ （merde） 呢？”</p>
</blockquote>
<blockquote>
<p>他身上这种对信仰的忠诚，从来没有被怀疑所困扰、被经历所动 摇，也从来没有被狂热所歪曲——“这种狂热，即使是天真的狂热，也 永远是有害的”。当这种忠诚体现在行动和活生生的言辞中时，它是极好的，而当它变成印在纸上的僵死的文字时，就有些苍白和乏力了。</p>
</blockquote>
<blockquote>
<p>每一天都宜于诞生，每一天 都宜于死亡。（ “Everyday is a good day to be born ,every day is a good day to die. “）</p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>黑暗时代的人们</tag>
        <tag>汉娜·阿伦特</tag>
      </tags>
  </entry>
  <entry>
    <title>一些摘錄</title>
    <url>/posts/initium_221104.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘录。</p>
<span id="more"></span>
<h2 id="《【爱欲录】尖沙咀SM黑丝女皇：粉红灯光下的Play、Work、Loves》"><a href="#《【爱欲录】尖沙咀SM黑丝女皇：粉红灯光下的Play、Work、Loves》" class="headerlink" title="《【爱欲录】尖沙咀SM黑丝女皇：粉红灯光下的Play、Work、Loves》"></a>《【爱欲录】尖沙咀SM黑丝女皇：粉红灯光下的Play、Work、Loves》</h2><blockquote>
<p>这些客人来自不同的职业，由十七八岁到五十岁都有，“其中特别多专业人士，医生、律师、会计师、公务员都有。”Apple这样说。在香港著名的“一楼一”（一楼一凤，指一个住宅单位内只有一名性工作者提供服务）指南网站里，其他SM女皇的广告里附带有多半是鳝稿（公关文）的“赛后报告”，其中也不乏强调自己是专科医生、跨国公司高层的“参赛者”，想在沉闷的生活中找寻剌激、挑战自己。似乎专业人士的确是性行业里SM女皇的主要客源。现实生活里愈是能够掌控一切的人，在性欲上愈有被征服的渴望，就算没有疫情，大都会的生活压力本来就沉重，不少人找性工作者除了性需要外，抒压也是很重要的因素。<a href="https://theinitium.com/article/20210829-culture-sex-city-sm-queen/">^1</a></p>
</blockquote>
<blockquote>
<p>“做我们这一行男人见得多，现实生活中不会和男人有太多交集，爱情是很短暂的，一年半载就劳燕纷飞，但我想老了有个伴，所以有了这个男人。”撮合她和丈夫的朋友自然也是不知道她真正的职业，除了她和客人以外，无人知道这个外表打扮老土的中年女子，会是粉红色的情欲泡沫里的性虐女皇，踩著无数等待著从凌辱里释放欲望的阳具。</p>
<p>这种无法言说的孤独不是Apple独有的，社工吴嘉怡表示有很多女性性工作者也面对同样的问题：与丈夫关系恶劣，性生活不协调，生活战战兢兢害怕被人识穿身份，“企街（站街）的时候怕被熟人撞到，和丈夫的朋友吃饭又怕遇到曾经的恩客，也真的试过有案例是有姊妹接完一个客人，客人和朋友分享时，惊觉对手是自己的老婆。”有些性工作者本身在自己的家庭里就得不到丈夫的尊重，性工作的金钱报酬也许让她们更有满足感。<a href="https://theinitium.com/article/20210829-culture-sex-city-sm-queen/">^1</a></p>
</blockquote>
<blockquote>
<p>性工作的确在某程度上为部分生活在贫困中的女性带来希望与自由，自主选择跟什么人发生性行为，弹性地安排自己的时间，自由地分享财富而不需要看丈夫们的面色——尤其是在老夫少妻的中港婚姻里，当年轻妻子面对各种文化与年龄差异，面对对富裕香港的理想破灭，成为性工作者的丰厚收入至少让她们储够一笔钱供养家乡的老人、买楼、补贴子女的教育开支等等，即便这种生活是孤独且无人可以依靠的，同时也会造成她们精神上的困扰。<a href="https://theinitium.com/article/20210829-culture-sex-city-sm-queen/">^1</a></p>
</blockquote>
<hr>
<h2 id="《他们当上男性性工作者，看到人情冷暖，也看到心中那块最向往的自由》"><a href="#《他们当上男性性工作者，看到人情冷暖，也看到心中那块最向往的自由》" class="headerlink" title="《他们当上男性性工作者，看到人情冷暖，也看到心中那块最向往的自由》"></a>《他们当上男性性工作者，看到人情冷暖，也看到心中那块最向往的自由》</h2><blockquote>
<p>在香港，男性性工作者俗称“哥哥仔”。他们有的是“一楼一”（一个单位有一个性工作者），工作的地方很多都与住宅单位为邻；亦有人“跑私钟”（自己接客）或援交，在骨场也会见到他们的身影。与一般在港的女性性工作者不同的是，他们不会“企街”（站在街上招揽顾客），现在只会透过交友软件、网上论坛等方式招客。<a href="https://theinitium.com/article/20221104-hongkong-male-sex-workers/">^2</a></p>
</blockquote>
<blockquote>
<p>香港没有官方统计男性性工作者人口。爱滋病社区論坛和香港爱滋病服务机构聯盟在2011年推算，香港有2400至3700名男性性工作者；而根据关注男性及跨性别性工作者的民间团体午夜蓝在2007年估计，全职男性性工作者有近1500人，服务对象主要为男性。随着网络和应用程式兴起，午夜蓝总干事倪德健说，很难掌握现时香港“哥哥仔”的具体数字。</p>
<p>在90年代之前，同性恋性行为在香港是犯法。直到1991通过法案，将21岁或以上成年男子在私人地方自愿进行的男男性行为，修订为非刑事化。2004年，同志梁威廉提呈司法覆核，指条列所定的肛交合法年龄为21岁，但一般性交合法年龄是16岁，涉嫌性倾向歧视。当时高等法院判梁威廉胜诉，但直到2014年，政府才将同性肛交的合法年龄下调至16岁，和“与未成年少女发生性行为”的年龄限制一样。<a href="https://theinitium.com/article/20221104-hongkong-male-sex-workers/">^2</a></p>
</blockquote>
<blockquote>
<p>午夜蓝这本新书（《午夜男喃——香港男性性工作者口述历史》）中，附上香港男性性工作及男同志文化发展年表，追溯60年代至今圈内的转变。早期因为社会保守，同志缺乏正式的社交场地，他们会聚集在被称为“花园”的公厕，看别人的性器官或做爱，一些“哥哥仔”也会来找生意。<a href="https://theinitium.com/article/20221104-hongkong-male-sex-workers/">^2</a></p>
</blockquote>
<blockquote>
<p>至于入行原因，他不讳言是为了赚多点钱，除钱以外，没有甚么满足感。“累，天天做爱，你受得了吗，正常的人体的话，不可能像机器一样运作。”最忙时，他一天会接十多个客人。</p>
<p>子浩觉得，性工作和主流工作没有分别，他望向记者，指记者出门跟他面对面采访，也是利用身体赚钱，“只是大家使用自己的东西，为甚么有错呀？”</p>
<p>“人类好像把性视为很肮脏的东西，不管你男人女人，一旦接触到性，你就是肮脏的身体，我觉得很奇怪，为甚么？我到现在都理解不了。”<a href="https://theinitium.com/article/20221104-hongkong-male-sex-workers/">^2</a></p>
</blockquote>
<blockquote>
<p>子浩在香港当过几个月的按摩技师，也有自己接客。他说，性是肢体语言，按摩、性爱技巧，在各地也通用，“可能除了叫床的声音不一样，其他都一样。”亚洲人多数只会发出“阿～阿～”呻吟声，外国人则夹杂“Yes、Yeah”，这种对性爱愉悦感的表达方式，也透露了一点点文化差异。<a href="https://theinitium.com/article/20221104-hongkong-male-sex-workers/">^2</a></p>
</blockquote>
<blockquote>
<p>给他介绍妻子的男密友，才是那位对他“100%”的Mr. Right。对方有家庭有小孩，在那守旧的年代，他和David的爱是禁忌，因此他坚持要David跟他一样找女伴，过“一般人”的生活。</p>
<p>但私下，这男伴曾经从上海到香港工作，找借口和David同住。十年前，男伴患上癌症，David停止工作，悉心照料，带他去旅行，直到最后一程，丧礼亦是他亲手办的。他没有让这关系浮面，以一个“比较亲的亲戚”身份去做这一切。</p>
<p>对于这个爱了30多年的爱人，有些事还是不能宣之于口——David一直隐瞒自己的工作，怕男伴难受，亦不想在他最后的日子给他太多刺激。</p>
<p>David现时独身，感情事顺其自然。“上天给我这么多好的男人让我享受，我还要一个Lover，这是没可能的事。”<a href="https://theinitium.com/article/20221104-hongkong-male-sex-workers/">^2</a></p>
</blockquote>
<hr>
<h2 id="《爱欲录：香港同志桑拿十年记——黑房迷宫，肉体之海，我与陌生人》"><a href="#《爱欲录：香港同志桑拿十年记——黑房迷宫，肉体之海，我与陌生人》" class="headerlink" title="《爱欲录：香港同志桑拿十年记——黑房迷宫，肉体之海，我与陌生人》"></a>《爱欲录：香港同志桑拿十年记——黑房迷宫，肉体之海，我与陌生人》</h2><blockquote>
<p>在霓虹色的走廊，有人伸手把他拉过来，在他的耳边吹气，伸手拿开围在他腰间的白毛巾，两具肉体之间迫切地渴求对方，他的胡渣磨过他的肩膀，舌尖在对方的深渊里纠缠。湿透的空气，在这里，他们只有一个目的。</p>
<p>他们是这个城市的男同志，有不同的职业和身份，他们来到黑房，赤身露体狩猎另一个和他们欢爱的人，“到桑拿觅食做爱，就像去不同的餐厅吃饭一样。”Ryan这样跟我说。<a href="https://theinitium.com/article/20180902-culture-gay-sauna/">^3</a></p>
</blockquote>
<blockquote>
<p>真正的黑房在休息间之后，黑房的阵形每家都不一样，但大致都是在迂回狭窄的走廊两旁，走廊是单人道，只容得下一人走过，二人同行就得鼻息相接几乎面贴面。桑拿里的人靠著墙站，对每一个人上下打量，等待适合的人经过，他们裸身观望、伸手抚模，对上了就会捉入房间做爱。“有些人会故意在走廊做爱，或者打开房门做，看看有没有其他人加入。”黑房的走廊有微弱的灯，走廊边的霓虹，房里色情电影的光在闪动，有些人身上挂著萤光棒以示他们的性喜好，人们走来走去找寻交欢的对象，像是狭窄河道里流来流去的鱼。<a href="https://theinitium.com/article/20180902-culture-gay-sauna/">^3</a></p>
</blockquote>
<blockquote>
<p>“我去的其中一间桑拿浴室的位置可以看到弥敦道。从上而下望向弥敦道的光，两个空间相隔那么近，但世界很不一样。”在明亮惨白的光里，爱欲床事尚需遮遮掩掩，但在这个暗房，各人摸黑，甚至无法看清对方的每一个细节，但正是这种若隐若现，让他们可以淋漓地撞击彼此的肉体。<a href="https://theinitium.com/article/20180902-culture-gay-sauna/">^3</a></p>
</blockquote>
<blockquote>
<p>香港同志桑拿流行，也与土地问题有关，租金楼价高企（居高不下）让年轻人多与家人同住，没有自己的地方也等于没有性空间，衣柜里的同志更不能像异性恋者一样带恋人回家过夜，桑拿提供了空间，也提供了欲望的实践，“在桑拿里，货就摆在你面前随便选。”Ryan用货来形容桑拿场内的人，他是选货者，也是待选的货物，他们在里面自愿物化成为性的容器，等待被充满的快感，“我有时候也会想，那些长得又帅身型又健美，看起来人人都喜欢的同志，其实是不是不需要来桑拿？我也会想，桑拿对中老年人来说也挺残酷的，时时见他们走来走去也找不到合适的对象。”<a href="https://theinitium.com/article/20180902-culture-gay-sauna/">^3</a></p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>端媒</tag>
        <tag>性</tag>
      </tags>
  </entry>
  <entry>
    <title>失乡</title>
    <url>/posts/diaspora_in_my_home.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>失乡</p>
<span id="more"></span>

<p>失乡的言语在我口中流淌，<br>愚笨的舌脷碰撞口腔，<br>他乡的语言拼凑黑色训诫：<br>“失乡即是你的故乡。”</p>
<p>失乡的言语在我口中流淌，<br>钢铁的戒律种在广场，<br>唯有顽固的年纪得以幸免：<br>“失乡即是你的故乡。”</p>
<p>失乡的言语在我口中流淌，<br>文明的站台摆满自愿留下的创伤，<br>乘客从离去的列车再次抵达：<br>“失乡即是我的故乡！”</p>
<p>失乡的言语在我口中流淌，<br>九月应前往北方的故乡。<br>在旧居的危墙下，<br>我烧净书信，别过父母，<br>坐上邻舍的篷车前往他乡——<br>        尽管如此。</p>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
      <tags>
        <tag>诗</tag>
      </tags>
  </entry>
  <entry>
    <title>阴雨连绵与无所事事</title>
    <url>/posts/unrelenting_rain.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我喜欢雨声，但是不喜欢下雨。</p>
<span id="more"></span>

<p>这周，我们这边降温了，伴随着降温的是连绵的雨天。阴雨连绵的日子里，我趴在床上看《百年孤独》，书里的马孔多也下了几年都未曾停过的大雨。</p>
<p>《百年孤独》应该算下半年来我看的第一本实体书，但是我并不是第一次读这部作品，早在初中，这部作品就被我翻过两遍。这次，我无聊之下又把人物关系整理了出来。对着整理的族谱再看一遍这部作品，却发现弄清谁是何塞·阿尔卡蒂奥，谁是奥雷里亚诺，带来的阅读体验与多年前并无太大不同。</p>
<p>周二读完之后，我便一直想写些什么，记录下读后转瞬即逝的感觉。 然而，连绵的阴雨也使我变得懒散。于是，这一计划一再推迟，推无可推之后，它被我从日程表上删除了。</p>
<p>我也努力地尝试让自己打起精神，于是我每天早上都会喝一杯黑咖啡：一勺半咖啡粉加上一杯水，喝一个早上。这贴心的饮品治好了我起床后的困倦，但是治不好我不想做事的心境，于是，我还是一如既往的懒散。</p>
<p>无所事事或许并不是因为我需要休息，而是因为居家大半年后，我对重复的安逸生活感到厌倦，同时眼下找不到一个有意义的目标让我奔赴。毕业论文、网课证书，这些是忙碌的借口，但并不是一个让我心悦诚服的理由。我渴望去做一些对自己的有意义的事情。</p>
<p>所以我做了唉酱，当然现在暂停了，因为部署服务器让我觉得困难。或许，在此之后，我还会重新拾起画笔，或者终于下定决心开始写在我脑海中上演了修改了十几回的oc大长篇，或者豪掷几百块购入陀思妥耶夫斯基全集，在两个月内一一看完……</p>
<p>阴雨连绵的日子，适合翘掉不想写的作业，打开博客，敲下一篇流水账博文。然后，让它来告诉你，下一秒该做什么。</p>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
  </entry>
  <entry>
    <title>《黑暗时代的人们》 论黑暗时代的人性：思考莱辛</title>
    <url>/posts/men_in_dark_times_1.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘录。</p>
<span id="more"></span>

<h2 id="论黑暗时代的人性：思考莱辛"><a href="#论黑暗时代的人性：思考莱辛" class="headerlink" title="论黑暗时代的人性：思考莱辛"></a>论黑暗时代的人性：思考莱辛</h2><p>本文为汉娜·阿伦特在接受汉堡自由市所授予的”莱辛奖章”时发表的演说。</p>
<hr>
<h3 id="世界"><a href="#世界" class="headerlink" title="世界"></a>世界</h3><blockquote>
<p>世界和在世界中居住的人们并不是一回事。世界存在于 人们之间，这一”中间物” (in-between)一一它远不只是(像通常认为 的那样)”人们”甚或”人类”一一如今已成为问题的焦点，并在地球上几乎所有国家中经历着最为显著的变化。即使在那些世界仍处于有序状态，或仍保持其有序状态的地方，公共领域也已经失去了它在其 本质中原初具有的启明力量(the power of illumination) 。</p>
</blockquote>
<blockquote>
<p>在莱辛那里，批评意味着永远为了世界而采取立场，在任何时候 都根据事物在世界中的位置来理解和评判它们。</p>
</blockquote>
<p>原注释：<strong>“世界”(world)</strong> 概念在阿伦特的思想中非常重要。在这篇演说中，它并非是指人们 通过”工作”或”制作”而产生的持存物的世界，而是指人类进行交往和行动的”公共领域” (public realm) 。</p>
<blockquote>
<p>当世界被粗暴地卷入一种在其中不再有任何持存性的运动之中时，对人或终有一死者的需要而言，世界就变得非人性化和不宜居住了。这就是为什么从法国大革命的失败开始，人们就不断地反复重建那些已被摧毁的古老柱石，但却只能一遍又一遍地看着它们先是晃动，然后又再次崩坏。那些最可怕的错误已经取消了”古老的真 理而这些学说的错误却又构不成对古老真理的证明，也无法构成新 的柱石。在政治领域中，修复从来都不能替代一个新基础的奠立，它最多只是在作为”革命”的奠基行动巳失败时，所采取的一种必然的应 急措施。但同样必然的是，<u>在这样一种星丛 (constellation) 时中，尤其是 当它在时间中伸展得如此之远时，人们对世界、对公共领域的所有方面的不信任就将变得越来越牢固。</u></p>
</blockquote>
<p>原注释：<strong>“星丛”</strong> 是本雅明和阿多诺的术语，指一种彼此并立而不被某个中心整合的诸种变 动因素的集合体。阿伦特在此用它来指称一种无秩序的、解体的、崩溃的状态。</p>
<hr>
<h3 id="博爱"><a href="#博爱" class="headerlink" title="博爱"></a>博爱</h3><blockquote>
<p>卢梭把法国大革命精神 (它被卢梭的观念所造就)中的 <strong>“博爱”  (fratermité)</strong>  视为人性的完满实现。与此不同的是，莱辛则把”友爱”  (friendship) 一一它是有选择’性 的，不像同情是平等主义的一一作为一个中心现象，只有靠它才能证 明一个人的真实人性。</p>
</blockquote>
<blockquote>
<p>莱辛也非常熟悉它; 他谈论过 <strong>”博爱感“</strong>，谈论过一种对其他人类成员的兄弟般的爱，而它源于对人们在其中受到“非人”对待的世界的憎恨。然而，就我们的目 的而言，重要的是，<u>在”黑暗时代”中，人性最经常地是在这样一种兄弟之情 (brotherhood) 中显现出来。在时代变得极其黑暗，以至于对某些人群的洞察和选择能力来说不再能够从世界中撤离时，这样一种人性的出现，事实上就成为必然了。</u>人性通过这种”永恒之博爱”的形式，历史性地显现于受迫害和被奴役的人群当中。</p>
</blockquote>
<blockquote>
<p>这种人性（博爱感）乃是底层民众的特权，它是位于世界底层的人们 在一切情况下都永远具有的对其他人的优势所在。但这一特权的获得需要付出高昂的代价:它通常伴随着极端的对世界的丧失，以及非常可怕的所有机能的萎缩来作为对应。<u>这种丧失和萎缩，是从常识 (common sense，我们凭借常识在世界中给自身定位，它对我们和他人 都是共通的)的丧失开始，接着就是美感或趣味(我们凭借它来爱这个世界) 的丧失。</u>在极端的情形下，这种卑贱地位可能会持续好几个世纪，在这时我们确实可以谈论真正的无世界状态了。而无世界状态，唉，它永远是野蛮的一种形式。</p>
</blockquote>
<blockquote>
<p>法国大革命把 “博爱” 列在”自由”和”平等”这两项一直属于政治 领域的范畴旁边，但博爱却是在受压制、受迫害、被剥削和被侮辱 者一一18 世纪称之为”不幸者” (les malheureux) , 19 世纪称之为”悲惨者” (les misérables)一一中具有它的自然位置。</p>
</blockquote>
<hr>
<h3 id="无世界"><a href="#无世界" class="headerlink" title="无世界"></a>无世界</h3><blockquote>
<p>如今，同情心无疑是被视为一种自然性的、生物性的感受，它不由自主地触及每一位看到痛苦景象的正常人， 无论这种痛苦离他有多么遥远。同情心因而似乎是某种情感的理想基础，这种情感认为，向所有人伸出于就能建立→个在其中人人皆兄 弟的社会。通过同情心， 18 世纪具有革命热情的人道主义者寻求与不 幸者和悲惨者的联合一一一这种努力等同于让兄弟之情弥漫开来。但 是，它很快就出了问题，<u>因为这种人道主义的最纯粹形式乃是底层民 众的一种特权，它无法传递给那些不属于底层的人，也无法轻易地被他们接受。</u></p>
</blockquote>
<blockquote>
<p>在”黑暗时代”中，这种作为光的替代物的底层人群的温暖， 对所有那些厌恶世界因而渴望逃避到不可见性中的人们，却有着极大的吸引力，这一点也是事实。在这种不可见性和幽暗中，一个自身隐藏起来的人不再需要看到可见的世界，只有挤在一起的人们的温暖和博爱，才能偿还人类关系所呈现出的这种古怪的非现实性一一无论他 们在哪儿，他们都处在一种绝对的无世界状态中，与一个所有人共同的世界毫无关系。在这样一种无世界和非现实状态中，很容易推论出所有人共同的要素不再是世界，而是某某类型的”人的本性”。</p>
</blockquote>
<blockquote>
<p>这种”人的本性”及其伴随的博爱情感就只在黑暗中呈现它自身，并因而在世界中元法被人辨别。更有甚者，在可见的情况 下它们就像幻影一样消散掉了。被侮辱和被损害者的这样一种人性，从来 不会在解放之时再存留哪怕一分钟。这并不意味着这种人性就毫无作用，因为实际上它使得侮辱和损害变得可以忍受了，但这确实意味着，它和政治是不相关的。</p>
</blockquote>
<hr>
<h3 id="内在移民"><a href="#内在移民" class="headerlink" title="内在移民"></a>内在移民</h3><blockquote>
<p>正如 <strong>“内在移民”</strong> 这一命名所提示的，它是一种奇特的暧昧现象。它一方面意味着，<u>某些人身在德国但其行为却仿佛不再属于这个国度</u>，他们在感觉 上像是移民；另一方面它又说明，他们并没有真的移民，而只是退缩到了内在的领域，<u>退缩到思想和情感的个体性之中</u>。</p>
</blockquote>
<blockquote>
<p>在时代如此黑暗之际，无论是德国内外，在看来不可忍受的现实的表 面T，这样一种诱惑都特别强烈:从世界及其公共空间转到一种内在 的生活中，或者，完全忽略这个世界，而去热衷于一个幻想的”应然”世界或曾经存在过的世界。</p>
</blockquote>
<blockquote>
<p>人们把 1933 年到 1945 年这段时间当做仿佛从未存在过，仿佛德国、欧洲和世界历史中的这一段可以从史书上抹掉，仿佛一切都取决 于对过去的”消极”方面的遗忘，取决于化恐怖为感伤。</p>
</blockquote>
<blockquote>
<p>这种在直面过去真相方面的元能，或许已经成为了”内在移民”的直接遗产，正如它无疑在很大程度上，更直接地是希特勒政体的 一个后果一一也就是说，它是一场纳粹将所有德国居民都卷入其中的有组织犯罪的结果，<u>内在的放逐者并不比坚定的纳粹党员和犹豫的寄居者更能幸免</u>。</p>
</blockquote>
<hr>
<h3 id="叙述"><a href="#叙述" class="headerlink" title="叙述"></a>叙述</h3><blockquote>
<p>一个负责的行动的意义并不是在行动的 过程中变得清晰可见，而只是在行动自身已经完成并成为一个可以 <strong>叙述 (narration)</strong> 的故事时，才显示出来。</p>
</blockquote>
<blockquote>
<p>如果某种对过去的”征服”是可 能的话，它也只存在于对已发生之事的 <strong>陈述(relating)</strong> 中。不过，尽管这种陈述也在塑造历史，但它没有解决任何难题，也没有减轻任何痛苦，因而它从来就没有征服过任何东西。相反，只要事件仍然具有 活生生的意义一一这一意义可以保存很长一段时期一一”征服过去” 就可以采取重复叙述故事的形式。</p>
</blockquote>
<p>原注释：在这里需要区分”叙述“ (narrate) 和”陈述” (relate)。 relate 通常表示详细地陈述出某情况，这种情况多是自己亲历或了解到的，→般缺少对事件整体的把握。而 narrate 所表示 的”叙述”包含着情节，在讲述时有语调的变化，如停顿、激昂以及节奏，而且由低潮过渡到高潮，因而它所讲的故事是诗意的、可以反复讲述的，可以激发出人们对事件整体意蕴的领悟。</p>
<blockquote>
<p>广义上的诗人和狭义上的史家的 任务，便是使这种叙述活动保持运转，并使我们置身其中。我们大多 数人并不是诗人或史家，但我们可以从我们自身的生命经验出发，对 这一叙述活动感到亲近，因为我们同样有回忆自己生命中重要事件的 需要，在其中我们将这些事件与我们自身和他人关联起来。因此，我 们经常会产生出”诗意”在这个词最宽泛的意义上，它是一种人类的 潜在可能性;可以说，我们经常在期待着它从人类身上喷涌而出。而当这种诗意出现时，对已发生之事的叙述便成为一种对时间的中断， 一个成形的故事作为新芽就被嫁接到世界的树干之上。通过诗人或史家的具体描写，对历史的叙述便获得了持存和不朽。</p>
</blockquote>
<hr>
<h3 id="逃避"><a href="#逃避" class="headerlink" title="逃避"></a>逃避</h3><blockquote>
<p>我们要讨论的问题是:在一个变得非人的世界中，我们必须保持多大的现实性，以使得人性不被简化为一个空洞 的词语或幻影？换一种方式说：我们在多大程度上仍然需要对世界负责，即使是在我们被它排斥或从它之中撤离时?</p>
</blockquote>
<blockquote>
<p>它的限度在于这样的事实：<strong>力量 (strength)</strong> 和 <strong>权力 (power)</strong> 并不是一回事。权力只在人们一起行动的 地方，而非在人们作为个体变得更有力量的地方才会产生。<u>任何力量都不足以大到可以取代权力;无论力量在哪里与权力对抗，屈服的总是力量</u>。因此，当逃离无法通过绕开或遗忘现实来完成之时，正如有人认为自己过于善良和高贵，以至于不能与世界相对扰，或者他无法 面对蔓延世界的绝对”否定性这时即使是彻底的逃离和反抗力量，也要受制于既定的时代。例如，完全忽略纳粹让人无法忍受的愚蠢的 喋喋不休，这对人是多么有吸引力啊！然而，<u>无论人是多么渴望屈从 于这种诱惑而躲藏到自身灵魂的避难所中，人对现实性进行抛弃的结果，都永远是一种人性的丧失</u>。</p>
</blockquote>
<blockquote>
<p>因此，如果在第三帝国，一位日耳曼人和一位犹太人结下友谊时 仅仅声称”因为我们都是人类“这句话就很难作为一种人性的标记。 它只是对那一时代他们共同的现实和世界的逃避，他们也并非是在反抗那个世界。那些试图否认日耳曼人和犹太人之现实差别的人们，或许可以规避那部禁止这两类人进行交流的法案，但他们却不可能反抗它。如果要保持一种尚未丧失其现实根基的、处于迫害之现实中的人 性，他们必须能够对彼此说：“一个日耳曼人和一个犹太人，成为朋友。”无论这样一种友爱在当时的什么地方出现(当然今天的情形与此完全不同) ，同时又维持着其<u>纯粹性，亦即一方面没有不当的内疚感， 另一方面没有不当的优越或自卑感</u>，那么，他们在一个变得非人的世界里，就获得了一点人性。</p>
</blockquote>
<p>前者的声称是一种陈述 (relate) 而后者则是一种叙述 (narrate) 。后者承认了作为犹太人或日耳曼群体中的一员的存在，在语境中优先于其他身份，一如前文摘录中所述——”为了世界而采取立场，在任何时候都根据事物在世界中的位置来理解和评判它们“。</p>
<hr>
<h3 id="友爱"><a href="#友爱" class="headerlink" title="友爱"></a>友爱</h3><blockquote>
<p>我们习惯了把<strong>友爱</strong>仅仅视为一种私密现象，朋友们在其中彼此敞 开心灵，而用不着为世界及其要求所困扰。卢梭，而非莱辛，是这一看法的最强有力的支持者，而它与现代个体的基本态度非常一致：<u>这些个体在与世界疏离化的过程中，只有在隐私和面对面的私密性中才能真实地展现自己</u>。</p>
</blockquote>
<blockquote>
<p>但是，对希腊人来说，<strong>友爱</strong>的本质在于言谈。他们认为，只有经常交换意见才能把公民聚集为一个 poli 叫”城邦”)。<u>在言谈中，友爱的政治重要性以及其中包含的人性就显示出来</u>。与那种在其中个体只谈论自己的私密性的交谈完全不同， 尽管这种谈话也被朋友在场的快乐所充满，但它所关注的却是共同的世界；而如果这一世界不被人们经常谈及的话，它就会仍然是”非人的”(在这个词的非常字面的意义上)。</p>
</blockquote>
<blockquote>
<p><u>只有通过谈论世界和我们自身中正在发生的事情，我们才能把它们人性化，同时，也正是在谈论它们的过程中我们学会了做人</u>。 希腊人把这种在友爱的谈话中获得的人性称为 **philanthropia (仁爱)**，亦即”对人的爱”因为它通过准备与他人分享世界而显示出来。 它的反义词，亦即 misanthropy(厌恶人类) ，就意味着”厌恶人类者”找不到他喜欢的人来和他分享世界，意味着他认为没有人配得上与他一起在世界、自然和宇宙中分享喜悦。</p>
</blockquote>
<blockquote>
<p>希腊人的”仁爱”在变成罗马人的 <strong>humanitas(人道)</strong> 时意义发生了很多变化。最重要的变化对应着这样 一个政治事实:在罗马，那些有着极其庞杂不同的族群来源和世系的 人，也可以获得罗马公民权，因而可以进人有教养的罗马人之间的谈话，并与他们一起讨论世界和生活。<u>这一政治背景使得罗马人的”人 道”与近代人所说的”人性” ( humanity )区别开来，近代人在谈到”人性”时一般仅仅是指教育的结果</u>。</p>
</blockquote>
<blockquote>
<p>人应该是冷静和冷峻的，而非多愁善感的;人性是在友爱而不是 博爱中得到了证明；友爱不是私密的个人行为，而是政治的要求和对世界的防护。</p>
</blockquote>
<hr>
<h3 id="真理"><a href="#真理" class="headerlink" title="真理"></a>真理</h3><blockquote>
<p>无论在”拥有真理”和”总是正确”这两种观念之间有多大差别， 它们在一件事上是相同的：<u>那些选择了它们之一的人，在他们的看法 与人性或友爱发生冲突时，一般来说不会为了后者而牺牲他们的看 法</u>。实际上，他们认为，这样做将会违反一项更高的义务，亦即”客观性”的义务，因而即使他们偶尔作出这样的牺牲，他们也不会觉得自己 的行为是出于良知，相反倒会为自己有人性而感到羞愧，经常是为它而负疚。</p>
</blockquote>
<blockquote>
<p>问题就应该这样提出：任何学说，无论它们得到了多么 令人信服的证明，它是否值得人们为之牺牲诸如两个人之间独一性的 友爱呢?</p>
<p>因此我们又回到了出发点，回到了”客观性”在莱辛论辩中令人惊 讶的缺乏，回到了他那带着警觉的倾向性，这种倾向性与客观性根本 无关，因为它并不由它自身构成，而总是通过参照人们与世界的关系、参照他们的位置和意见来确定。</p>
</blockquote>
<blockquote>
<p>任何从原则上阻碍两人之间友爱可能性的学说，都会遭到莱辛那自在无碍、永远葆真的良知的拒绝。他会立即采取人性的立场，并很快打发掉每一阵营中的博学或不学元术的讨论。而这就是莱辛的人性所在。</p>
</blockquote>
<hr>
<h3 id="黑暗时代"><a href="#黑暗时代" class="headerlink" title="黑暗时代"></a>黑暗时代</h3><blockquote>
<p>这种人性出现在一个政治上受到奴役、且其根基已被动摇的世界 中。莱辛同样生活在“黑暗时代”并以自己的方式被时代的黑暗所毁灭。我们已经看到，人们在这些时代里是多么强烈地渴望着彼此靠得 更近，在这种私密性的温暖中寻求光与启明的替代品，而这种光与启 明只能由公共领域带来。然而，这意味着他们在回避争论，试图尽可 能地只和那些他们不会与之冲突的人们打交道。对一个像莱辛那样 的人来说，在这种时代、这种受限的世界中，只有很少一点空间;在那 里，人们挤在一起来彼此温暖，他们从他那里远离而去。但他依然对 可争论之物进行论辩，他宁可忍受孤独，也不要那种抹平一切差别的 兄弟般的过度亲密。<u>他从来不想真的和与他辩论的人争吵；他只想通 过连续不断地谈论世界中的事务和事情，来使这个世界变得有人性。他想成为许多人的朋友而不是兄弟</u>。</p>
</blockquote>
<blockquote>
<p>正因为莱辛是一个完全的政治人，他才坚持认为：<u>真理只能存在于那些因谈话而获得人性的地方，只能存在于人们不谈论 身边当下碰巧发生的事，而谈论他们”持以为真”的事情之处</u>。而这样一种谈话在孤独中实际上是不可能的;它属于这样一片场域:在其中 有许多声音，每一种”持以为真”的宣告都既联结了人们，又把他们分 开，从而在那些组成世界的人之间建立起一些真实的距离。任何超出 这种场域之外的真理，无论它是给人们带来利益或灾祸，从严格意义上说都是”<strong>非人性的</strong>“。</p>
</blockquote>
<blockquote>
<p>任何超出这种场域之外的真理，无论它是给人们带来利益或灾祸，从严格意义 上说都是”非人性的”。但这并非因为它会使人们彼此不和或将他们分离开来，<u>恰恰相反，是因为它会导致所有的人立刻就统一到一个单一的意见之下，以至于从许多意见变成一个意见，就好像居住在地球 上的不再是无限多数的人们，而只有一个单数的人，一个唯一的种类 及其样本</u>。如果这种情形发生的话，由于世界只形成于多样化的人们之间的中介空间中，因而世界就会彻底消失。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>黑暗时代的人们</tag>
        <tag>汉娜·阿伦特</tag>
      </tags>
  </entry>
  <entry>
    <title>《黑暗时代的人们》 作者序与索引</title>
    <url>/posts/men_in_dark_times_0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘录。</p>
<span id="more"></span>

<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>这篇摘录一如我往常的摘录，旨在记录读书时的所思所想，以便日后回顾。</p>
<hr>
<h2 id="作者序"><a href="#作者序" class="headerlink" title="作者序"></a>作者序</h2><blockquote>
<p>不过，历史时间，亦即书名中提及的“黑暗时代”我想在这本书中 仍然随处可见。我是从布莱希特的著名诗篇《致后人们》 (To Posterity) 中借用了这个词的。在那首诗中，这个词用来指涉这样一种状态：混乱和饥饿，屠杀和刽子手，对于不义的愤怒和处于”只有不义却没有对它的抵抗”时的绝望；在那里，合理的憎恨只会使人脾气变坏，而有理 由的愤怒也只是使自己的声音变得刺耳。</p>
</blockquote>
<blockquote>
<p>当我们思考这些黑暗时代，思考在其中生活和活动的人们时，我们必须把这种伪装也纳入到思考范围之内。这种伪装从”体制” （establishment，以前被称为”系统”）而来，并被它重重包裹。如果公共领域的功能，是提供一个显现空间来 使人类的事务得以被光照亮，在这个空间里，人们可以通过言语和行 动来不同程度地展示出他们自身是谁，以及他们能做些什么，那么，当这光亮被熄灭时，黑暗就降临了。那熄灭的力量，来自”信任的鸿沟” 和”看不见的操控”来自不再揭示而是遮蔽事物之存在的言谈，来自道德的或其他类型的说教一一这些说教打着捍卫古老真理的幌子，将所有的真理都变成了无聊的闲谈。</p>
</blockquote>
<blockquote>
<p>如下的信念，乃是本书所句勒的让这些轮廓得以浮现的深藏难言的背景:即使是在最黑暗的时代中，我们也有权去期待一种启明 (illumination) ，这种启明或许并不来自理论和概念，而更多地来自一种不确定 的、闪烁而又经常很微弱的光亮。这光亮源于某些男人和女人，源于 他们的生命和作品，它们在几乎所有情况下都点燃着，并把光散射到 他们在尘世所拥有的生命所及的全部范围。像我们这样长期习惯了 黑暗的眼睛，几乎无法告知人们，那些光到底是蜡烛的光芒还是炽烈 的阳光。但是这样一种客观的评判工作，对我而言似乎是件次要的事情，因而可以安心地留给后人。</p>
</blockquote>
<hr>
<h2 id="🔗-论黑暗时代的人性：思考莱辛"><a href="#🔗-论黑暗时代的人性：思考莱辛" class="headerlink" title="🔗 论黑暗时代的人性：思考莱辛"></a><a href="men_in_dark_times_1.html">🔗</a> 论黑暗时代的人性：思考莱辛</h2><hr>
<h2 id="🔗-安杰洛·朱塞佩·龙卡利：一位基督徒"><a href="#🔗-安杰洛·朱塞佩·龙卡利：一位基督徒" class="headerlink" title="🔗 安杰洛·朱塞佩·龙卡利：一位基督徒"></a><a href="men_in_dark_times_3.html">🔗</a> 安杰洛·朱塞佩·龙卡利：一位基督徒</h2><hr>
<h2 id="🔗-卡尔·雅斯贝尔斯：一篇赞词"><a href="#🔗-卡尔·雅斯贝尔斯：一篇赞词" class="headerlink" title="🔗 卡尔·雅斯贝尔斯：一篇赞词"></a><a href="men_in_dark_times_4.html">🔗</a> 卡尔·雅斯贝尔斯：一篇赞词</h2><hr>
<h2 id="卡尔·雅斯贝尔斯：世界公民"><a href="#卡尔·雅斯贝尔斯：世界公民" class="headerlink" title="卡尔·雅斯贝尔斯：世界公民?"></a>卡尔·雅斯贝尔斯：世界公民?</h2><hr>
<hr>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>黑暗时代的人们</tag>
        <tag>汉娜·阿伦特</tag>
      </tags>
  </entry>
  <entry>
    <title>唉酱 搭建日志</title>
    <url>/posts/ai_bot_building.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>仿生长毛象机器人会不会像人类一样有诸多烦恼。</p>
<span id="more"></span>

<blockquote>
<p>👾：突然想到了一个绝妙的bot想法<br>    ：随机产出“唉，…”语句<br>    ：每天唉个2-3条<br>    ：bot名叫人类<br>🐰：唉  我cp做爱太多</p>
</blockquote>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如上所述，半夜睡觉之前突然想到可以这样做。<del>借这个Bot，我们一起来思考，(非)仿生长毛象机器人会不会像人类一样有诸多烦恼。</del></p>
<p>这个机器人应该会随着我脑洞的扩大持续更新，所以在创建这篇文章的同时，我创建了相应的更新日志。其他后续功能（<del>以及画饼</del>）会更新在更新日志中。</p>
<p>本篇文章中，所有资料的参考来源都进行了标注，如果有搭建需要的朋友可自行查阅。</p>
<p><strong>目前基本搭建需求</strong>：</p>
<ul>
<li>每天定时产出随机语句（“唉，” + 任意内容）</li>
<li>根据用户投稿，语料库可更新</li>
</ul>
<hr>
<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h3 id="🔗-Setting-up-a-Mastodon-Bot"><a href="#🔗-Setting-up-a-Mastodon-Bot" class="headerlink" title="🔗 Setting up a Mastodon Bot"></a><a href="https://www.youtube.com/watch?v=pY4b18JGCKE&list=PLRqwX-V7Uu6byiVX7_Z1rclitVhMBmNFQ&index=2">🔗</a> Setting up a Mastodon Bot</h3><h4 id="bot-js"><a href="#bot-js" class="headerlink" title="bot.js"></a><code>bot.js</code></h4><p>并不是所有的实例都欢迎机器人的注册。这里我选择了 <a href="https://wxw.moe/">呜呜站</a> 这个实例搭建我的机器人。第一步我们需要为机器人注册一个账号，在注册帐号之后，实例管理员需要一定时间审核我们的请求。</p>
<p>注册之后填写自己的个人资料，在资料页面<strong>必须</strong>勾选 <code>This is a bot accout</code> 选项。</p>
<p>在账号主页面，找到 <code>Edit profile - Development - New application</code> 。保存设置后，重新点入设置好的 <code>application</code>, 获取账号密钥（不要跟任何人分享 ❗）</p>
<p>在Bot账号对应的代码文件夹打开 cmd </p>
<ul>
<li>输入 <code>npm init</code> ，根据相关指引完成初步设置</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Press C at any time to quit.</span><br><span class="line">package name: (mastodon<span class="literal">-human-bot</span>)</span><br><span class="line">version: (<span class="number">1.0</span>.<span class="number">0</span>)</span><br><span class="line">description: building bot</span><br><span class="line">entry point: (index.js) bot.js</span><br><span class="line">test command:</span><br><span class="line">git repository:</span><br><span class="line">keywords: bot, mastodon</span><br><span class="line">author: Erostrate <span class="comment">#这里是我的名字</span></span><br><span class="line">license: (ISC) MIT</span><br><span class="line">About to <span class="built_in">write</span> to D:\mastodon<span class="literal">-human-bot</span>\package.json: </span><br></pre></td></tr></table></figure>

<ul>
<li>输入 <code>code</code> ，打开 VS Code 界面，可以发现文件夹里多一个名为 <code>package.json</code> 的文件</li>
<li>在 <code>package.json</code> 同级目录下，新建 <code>bot.js</code></li>
</ul>
<h4 id="First-toot"><a href="#First-toot" class="headerlink" title="First toot"></a>First toot</h4><p>在 <code>bot.js</code> 中，我们首先要做的是连接到 Mastodon 的端口。我们使用的是 <a href="https://github.com/vanita5/mastodon-api">mastodon-api</a>.<br>安装  <a href="https://github.com/vanita5/mastodon-api">mastodon-api</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install <span class="literal">--save</span> mastodon<span class="literal">-api</span></span><br></pre></td></tr></table></figure>

<p><code>bot.js</code> 中的代码参考：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">Mastodon</span> = <span class="built_in">require</span>(<span class="string">&#x27;mastodon-api&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mastodon Bot starting...&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Mastodon</span> <span class="keyword">from</span> <span class="string">&#x27;mastodon-api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> M = <span class="keyword">new</span> <span class="title class_">Mastodon</span>(&#123;</span><br><span class="line">  <span class="attr">client_key</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">  <span class="attr">client_secret</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">  <span class="attr">access_token</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout_ms</span>: <span class="number">60</span> * <span class="number">1000</span>,  <span class="comment">// optional HTTP request timeout to apply to all requests.</span></span><br><span class="line">  <span class="attr">api_url</span>: <span class="string">&#x27;https://botsin.space//api/v1/&#x27;</span>, <span class="comment">// optional, defaults to https://mastodon.social/api/v1/</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>There are three core ways to engage with the Mastodon API</p>
<ul>
<li><code>get</code></li>
<li><code>post</code></li>
<li><code>streaming</code></li>
</ul>
</blockquote>
<p>这里主要会用到 <code>post</code>，因此我们查看它的 <a href="https://github.com/McKael/mastodon-documentation/blob/master/Using-the-API/API.md">说明</a> </p>
<ul>
<li>我们可以看到在 <code>post</code> 中，我们的代码格式是 <code>M.post(path, [params], callback)</code> </li>
<li>在 <code>[params]</code> 处，根据说明，可以有 <code>status</code> 等多项元素</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mastodon Bot starting...&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Mastodon</span> <span class="keyword">from</span> <span class="string">&#x27;mastodon-api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> M = <span class="keyword">new</span> <span class="title class_">Mastodon</span>(&#123;</span><br><span class="line">  <span class="attr">client_key</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">  <span class="attr">client_secret</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">  <span class="attr">access_token</span>: <span class="string">&#x27;...&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout_ms</span>: <span class="number">60</span> * <span class="number">1000</span>,  </span><br><span class="line">  <span class="comment">// optional HTTP request timeout to apply to all requests.</span></span><br><span class="line">  <span class="attr">api_url</span>: <span class="string">&#x27;https://wxw.ooo//api/v1/&#x27;</span>, </span><br><span class="line">  <span class="comment">// optional, defaults to https://mastodon.social/api/v1/</span></span><br><span class="line">  <span class="comment">// 推荐选择免翻墙的实例或者它的镜像</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="string">&quot;唉。&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">M.<span class="title function_">post</span>(<span class="string">&quot;statuses&quot;</span>, params, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>完成上述代码，在终端运行 <code>node bot.js</code>，便可看到机器人发表了第一条嘟文。</p>
<h3 id="🔗-Environment-Variables-in-Node-with-dotenv"><a href="#🔗-Environment-Variables-in-Node-with-dotenv" class="headerlink" title="🔗 Environment Variables in Node with dotenv"></a><a href="https://www.youtube.com/watch?v=pY4b18JGCKE&list=PLRqwX-V7Uu6byiVX7_Z1rclitVhMBmNFQ&index=3">🔗</a> Environment Variables in Node with dotenv</h3><h4 id="dotenv"><a href="#dotenv" class="headerlink" title="dotenv"></a><code>dotenv</code></h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install dotenv</span><br></pre></td></tr></table></figure>

<p><code>dotenv</code> 可以帮助我们为一个项目创建环境变量。在这里可以用于隐藏密钥。</p>
<p>如果运行<code>node bot.js</code> 报错 <code>SyntaxError: Cannot use import statement outside a module</code>，解决方法见<a href="ai_bot_errors.html">修理日记</a>。</p>
<p>新建 <code>.env</code> 文件，在其中输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AUTH_TOKEN = ...</span><br><span class="line">CLIENT_SECRET = ...</span><br><span class="line">CLIENT_KEY = ...</span><br></pre></td></tr></table></figure>

<h4 id="bot-js-1"><a href="#bot-js-1" class="headerlink" title="bot.js"></a><code>bot.js</code></h4><p>打开 <code>bot.js</code> ，修改如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Mastodon Bot starting...&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="variable constant_">ENV</span> <span class="keyword">from</span> <span class="string">&quot;dotenv&quot;</span> <span class="comment">//加载dotenv</span></span><br><span class="line"><span class="variable constant_">ENV</span>.<span class="title function_">config</span>()</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Mastodon</span> <span class="keyword">from</span> <span class="string">&#x27;mastodon-api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> M = <span class="keyword">new</span> <span class="title class_">Mastodon</span>(&#123;</span><br><span class="line">  <span class="attr">client_key</span>: process.<span class="property">env</span>.<span class="property">CLIENT_KEY</span>, <span class="comment">//使用.env中的信息，隐去上一个代码块中的相关信息</span></span><br><span class="line">  <span class="attr">client_secret</span>: process.<span class="property">env</span>.<span class="property">CLIENT_SECRET</span>,</span><br><span class="line">  <span class="attr">access_token</span>: process.<span class="property">env</span>.<span class="property">AUTH_TOKEN</span>,</span><br><span class="line">  <span class="attr">timeout_ms</span>: <span class="number">60</span> * <span class="number">1000</span>,  <span class="comment">// optional HTTP request timeout to apply to all requests.</span></span><br><span class="line">  <span class="attr">api_url</span>: <span class="string">&#x27;https://botsin.space//api/v1/&#x27;</span>, <span class="comment">// optional, defaults to https://mastodon.social/api/v1/</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="string">&quot;唉。&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">M.<span class="title function_">post</span>(<span class="string">&quot;statuses&quot;</span>, params, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h4 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a><code>.gitignore</code></h4><p>与此同时，新建 <code>.gitignore</code> 文件，在其中键入 <code>.env</code>。这样做的目的是，后续Git 上传代码的时候，不会将密钥暴露。</p>
<h3 id="🔗-Posting-with-setInterval"><a href="#🔗-Posting-with-setInterval" class="headerlink" title="🔗 Posting with setInterval()"></a><a href="https://www.youtube.com/watch?v=pY4b18JGCKE&list=PLRqwX-V7Uu6byiVX7_Z1rclitVhMBmNFQ&index=4">🔗</a> Posting with setInterval()</h3><p><code>setInterval()</code> 这个函数，顾名思义，就是让你的 Bot 定时做一些事。</p>
<h4 id="bot-js-2"><a href="#bot-js-2" class="headerlink" title="bot.js"></a><code>bot.js</code></h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> fs <span class="keyword">from</span> <span class="string">&quot;fs&quot;</span></span><br><span class="line"></span><br><span class="line">M.<span class="title function_">post</span>(<span class="string">&quot;statuses&quot;</span>, params, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fs.<span class="title function_">writeFileSync</span>(<span class="string">&#x27;data.json&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data, <span class="literal">null</span>, <span class="number">2</span>); <span class="comment">// 加上这一行</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>运行完毕后，同级目录下会多出 <code>data.json</code> 文件。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">M.<span class="title function_">post</span>(<span class="string">&quot;statuses&quot;</span>, params, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ID: &#x27;</span> + data.<span class="property">id</span> + <span class="string">&#x27; and timestamp: &#x27;</span> + data.<span class="property">created_at</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这一步的更改，使得每次成功发表嘟文之后，控制台返回发表嘟文的 <code>id</code> 和 <code>created_at</code> 信息。如果想返回其他信息可查询 <code>data.json</code> 文件中，每条嘟文会有的信息类型。</p>
<h4 id="status"><a href="#status" class="headerlink" title="status:"></a><code>status:</code></h4><p>更改下面代码的 <code>status</code>，可以改变每次嘟文的内容。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="string">&quot;唉。&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="setInterval-function-interval-in-millisec"><a href="#setInterval-function-interval-in-millisec" class="headerlink" title="setInterval(function, interval_in_millisec)"></a><code>setInterval(function, interval_in_millisec)</code></h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">toot_make_love</span>();</span><br><span class="line">	<span class="comment">//Defining a function to toot</span></span><br><span class="line"><span class="built_in">setInterval</span>(toot_make_love, <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>); </span><br><span class="line">    <span class="comment">//millisec = sec * 1000</span></span><br><span class="line">    <span class="comment">//It means &quot;do the function every 60 seconds&quot;.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">toot_make_love</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> num = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">10</span>); </span><br><span class="line">    <span class="comment">//Returning a float between 0 and 1</span></span><br><span class="line"><span class="keyword">const</span> params = &#123;</span><br><span class="line">    <span class="attr">spoiler_text</span>: <span class="string">&quot;⚠ NSFW&quot;</span>,</span><br><span class="line">    <span class="attr">status</span>: <span class="string">&quot;唉，你cp今天做了 &quot;</span> + num + <span class="string">&quot; 次爱。&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">	<span class="comment">//Defining the content of the toot</span></span><br><span class="line"></span><br><span class="line">M.<span class="title function_">post</span>(<span class="string">&quot;statuses&quot;</span>, params, <span class="function">(<span class="params">error, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ID: &#x27;</span> + data.<span class="property">id</span> + <span class="string">&#x27; and timestamp: &#x27;</span> + data.<span class="property">created_at</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">content</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="🔗-Streaming-API"><a href="#🔗-Streaming-API" class="headerlink" title="🔗 Streaming API"></a><a href="https://www.youtube.com/watch?v=pY4b18JGCKE&list=PLRqwX-V7Uu6byiVX7_Z1rclitVhMBmNFQ&index=5">🔗</a> Streaming API</h3><p><code>streaming</code> 可以帮助我们实时获取用户活动（类似于 <code>notification</code>）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> listener = M.<span class="title function_">stream</span>(<span class="string">&#x27;streaming/user&#x27;</span>)</span><br><span class="line"></span><br><span class="line">listener.<span class="title function_">on</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="params">msg</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(msg))</span><br><span class="line">listener.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err))</span><br></pre></td></tr></table></figure>

<p>相关问题见<a href="ai_bot_errors.html">修理日记</a>。</p>
<h3 id="🔗-Managing-User-Events（待续）"><a href="#🔗-Managing-User-Events（待续）" class="headerlink" title="🔗 Managing User Events（待续）"></a><a href="https://www.youtube.com/watch?v=pY4b18JGCKE&list=PLRqwX-V7Uu6byiVX7_Z1rclitVhMBmNFQ&index=6">🔗</a> Managing User Events（待续）</h3><h3 id="🔗-Replying-to-a-Mention（待续）"><a href="#🔗-Replying-to-a-Mention（待续）" class="headerlink" title="🔗 Replying to a Mention（待续）"></a><a href="https://www.youtube.com/watch?v=pY4b18JGCKE&list=PLRqwX-V7Uu6byiVX7_Z1rclitVhMBmNFQ&index=7">🔗</a> Replying to a Mention（待续）</h3><h3 id="🔗-Tree-Bot"><a href="#🔗-Tree-Bot" class="headerlink" title="🔗 Tree Bot"></a><a href="https://www.youtube.com/watch?v=pY4b18JGCKE&list=PLRqwX-V7Uu6byiVX7_Z1rclitVhMBmNFQ&index=11">🔗</a> Tree Bot</h3><p>如果我们需要一个功能为定时产生、发送随机语句的bot，我们需要做的事情有：</p>
<ul>
<li>设置好运行相应功能的代码</li>
<li>在 <code>bot.js</code> 中进行定时、上传、发嘟</li>
</ul>
<p>到这一步，你可能会不断地遇到 <code>443</code> 错误，这里我提供了我的<a href="ai_bot_errors.html">修理日记</a>。如果你遇到了，不要气馁，坚持做下去总会有结果的！</p>
<h4 id="定时发送"><a href="#定时发送" class="headerlink" title="定时发送"></a>定时发送</h4><p>这个功能在 <code>bot.js</code> 中的实现遵循以下思路：</p>
<ul>
<li>连接账号</li>
<li>执行功能<ul>
<li>获取相应功能的 .py</li>
<li>通过 <code>setInterval()</code>  设置时间间隔</li>
<li>上传 .py 的输出结果</li>
<li>发送嘟嘟</li>
</ul>
</li>
</ul>
<p>我们借助 <code>child_process</code> 模块中的 <code>exec</code> 来连接执行功能的 .py 文件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; exec &#125; <span class="keyword">from</span> <span class="string">&#x27;child_process&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> exec_promisify = util.<span class="title function_">promisify</span>(exec);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">function</span> = <span class="string">&#x27;python ./function.py&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>这一步，我们的需求是“通过 <code>bot.js</code> 在终端获取 <code>function.py</code> 的输出结果”，因此我们接着： </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">const</span> response = <span class="title function_">exec_promisify</span>(<span class="keyword">function</span>);</span><br><span class="line"><span class="comment">// 在终端执行 `function`</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">stdout</span>);</span><br><span class="line">    <span class="comment">// 在终端呈现输出结果</span></span><br></pre></td></tr></table></figure>

<p>输出结果如果是中文语句，可能会出现乱码情况，解决方法见<a href="ai_bot_errors.html">修理日记</a>。</p>
<p>到这里，我们基本上已经完成了机器人需要的部分，剩下要做的就是把内容整理在一起。我们可以把需要执行的功能视为一个函数（function），<strong>机器人做的就是不断地，在一定条件下，运行这个函数，同时把函数结果输出在时间轴上</strong>。因此，我们首先要做的是把功能封装到一个函数下。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">toot_sigh</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">exec_promisify</span>(sigh);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">stdout</span>);</span><br><span class="line">    <span class="comment">// Step 1: Exec processing (create a output string)</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> params = &#123;</span><br><span class="line">        <span class="attr">status</span>: response.<span class="property">stdout</span>,</span><br><span class="line">        <span class="attr">visibility</span>: <span class="string">&#x27;unlisted&#x27;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// Step 2: Upload (return and attach to the following toot)</span></span><br><span class="line">    <span class="comment">// 由于这里我只需要字符串，因此相比上传图片会更加简单。需要上传图片可参照视频代码。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> final_response = <span class="keyword">await</span> M.<span class="title function_">post</span>(<span class="string">&#x27;statuses&#x27;</span>, params); </span><br><span class="line">    <span class="comment">// Step 3: Toot!</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">success</span>: <span class="literal">true</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>还记得我们之前的 <code>setInterval()</code> 吗？嗯，套上去。我们在上一个代码串的前面加上以下代码。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> sigh = <span class="string">&#x27;python ./sigh.py&#x27;</span>;</span><br><span class="line"><span class="comment">// 获取相应功能的 .py</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">toot_sigh</span>()</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(response))</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(error));</span><br><span class="line"><span class="comment">// 定时开始之前先运行一次</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(</span><br><span class="line">    <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">toot_sigh</span>()</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(response))</span><br><span class="line">            .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(error));</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//10 * 1000</span></span><br><span class="line">    <span class="number">3</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span></span><br><span class="line">    <span class="comment">// millisec = sec * 1000</span></span><br><span class="line">); </span><br><span class="line"><span class="comment">// 设置定时</span></span><br></pre></td></tr></table></figure>

<p>这时，保存，运行 <code>node bot.js</code> ，理论上我们的机器人就开始嘟嘟嘟嘟嘟了。如果又遇到了 <code>443</code> 错误，请参照<a href="ai_bot_errors.html">修理日记</a>解决。</p>
<p>最后，如果机器人后续还会有别的功能，每个功能的代码也是类似的编写模式。具体案例可以参照 <a href="https://github.com/TheTarr/mastodon_bot">操操</a> 的 <code>bot.js</code>.</p>
<h4 id="即时应答（待续）"><a href="#即时应答（待续）" class="headerlink" title="即时应答（待续）"></a>即时应答（待续）</h4><p>这部分我们要用到的是 mastodon-api 的 <code>stream</code> 功能，代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">M.<span class="title function_">stream</span>(path, [params])</span><br></pre></td></tr></table></figure>

<h4 id="服务器部署"><a href="#服务器部署" class="headerlink" title="服务器部署"></a>服务器部署</h4><p>建议在开始之前，先参照<a href="https://derek.coderbridge.io/2020/10/20/%E9%83%A8%E7%BD%B2-nodejs-app-%E5%9C%A8-heroku/">这篇文章</a>把相应的代码配置好，以免后续像我一样劳心伤神。</p>
<p>这一步，请检查好：</p>
<ul>
<li><code>Procfile</code> 文件设置好了没有（无拓展名，内容如参考文章所示）</li>
<li><code>package.json</code> 的 <code>&quot;start&quot;</code> 设置好了没有（如果开启bot的代码为<code>node bot.js</code>，则内容应为<code>node bot.js</code>）</li>
<li>在本地的终端控制台键入<code>npm start</code>，代码应该能如常运行</li>
</ul>
<p>我使用了 <a href="https://www.heroku.com/">heroku</a> 进行部署，官方教程见<a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#set-up">此处</a>，也可以参照 <a href="https://www.jianshu.com/p/19b7c919907a">这篇</a>。</p>
<p>第一步需要<strong>在对应的 git 仓库设置好 heroku 的远程端口</strong>，这一步需要代理。我这边用的是 Clash，在 Clash 首页第一项 <code>Port</code> 可以直接点击右侧图标，进入已经设置好代理的 powershell。键入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">heroku login</span><br></pre></td></tr></table></figure>

<p>因为我这边本地已经有仓库，所以直接在cmd打开本地仓库，同时参考<a href="https://devcenter.heroku.com/articles/git#create-a-heroku-remote">这份教程</a>进行部署。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">heroku create -a your-app-name</span><br><span class="line"># 这一步是创建一个新的app</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">heroku git:remote -a your-existed-app-name</span><br><span class="line"># 这一步是在你已经有的本地仓库上，添加一个heroku的远程</span><br><span class="line"># 这一步与以上那一步二选一</span><br></pre></td></tr></table></figure>

<p>完成之后，打开 heroku 的 dashboard，应该能看到对应 app 的 <code>deploy</code> 栏已经显示了相应的 git 仓库。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote rename heroku heroku-your-name</span><br><span class="line"># 为heroku的远程命名</span><br></pre></td></tr></table></figure>

<p>heroku 的远程默认与原仓库同名，为了便于区分，这里推荐进行重命名。下一步我们将代码部署到 heroku 的远程上。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push heroku-your-name main</span><br></pre></td></tr></table></figure>

<p> main 前为远程主机名，如果分支是<code>master</code>，那么把<code>main</code>改为<code>master即可</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push heroku-your-name testbranch:main</span><br></pre></td></tr></table></figure>

<blockquote>
<p>To deploy code to Heroku from a non-main branch of your local repository (for example, <code>testbranch</code>), use the following syntax push it to the remote’s <code>main</code> branch.</p>
</blockquote>
<p>这一步的解释可以类比<a href="https://www.runoob.com/git/git-push.html">这里</a>，大概的意思就是，如果不是 <code>main</code> 或者 <code>master</code> 分支，那么就将相应分支推到 <code>main</code> 分支，再进行上传。</p>
<p>如果你像我一样之前乱搞，那么在这一步可能会报错说 <code>Error: Multiple apps in git remotes</code>，解决方法见 <a href="./ai_bot_errors">修理日记</a>。</p>
<p>完成之后依次输入这两行代码，测试能否正常运行。能正常运行则说明，我们的代码在本地运行已经没有问题了（尽管暂时还不能直接在服务器运行），同时，我们已经成功了一大半！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">heroku ps:scale web=1</span><br><span class="line">heroku local web</span><br></pre></td></tr></table></figure>

<p>这里我出现了 <code>Incorrect Port Setup</code> 和 <code>AppCrashed</code> 错误，解决方法见 <a href="./ai_bot_errors">修理日记</a>。</p>
<p><a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs#push-local-changes">https://devcenter.heroku.com/articles/getting-started-with-nodejs#push-local-changes</a></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>造物</tag>
        <tag>Mastodon</tag>
        <tag>Bot</tag>
        <tag>腦洞</tag>
        <tag>唉酱</tag>
        <tag>heroku</tag>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>唉酱 修理笔记</title>
    <url>/posts/ai_bot_errors.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>仿生长毛象机器人会不会像人类一样有诸多烦恼。（反正我有）</p>
<span id="more"></span>

<h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><h3 id="node-js-中文乱码解决"><a href="#node-js-中文乱码解决" class="headerlink" title="node.js 中文乱码解决"></a>node.js 中文乱码解决</h3><p><code>.py</code> 代码加上一行：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">sys.stdout = io.TextIOWrapper(sys.stdout.detach(), encoding = <span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="Module-缺失"><a href="#Module-缺失" class="headerlink" title="Module 缺失"></a><code>Module</code> 缺失</h3><p>报错信息如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SyntaxError: Cannot use import statement outside a module </span><br></pre></td></tr></table></figure>

<p><code>package.json</code> 生成后，在代码里面加一行。否则后续 <code>bot.js</code> 会报错 <code>SyntaxError: Cannot use import statement outside a module </code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;module&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<h3 id="端口占用"><a href="#端口占用" class="headerlink" title="端口占用"></a>端口占用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Client network socket disconnected before secure TLS connection was established</span><br></pre></td></tr></table></figure>

<h4 id="原因：域名被墙"><a href="#原因：域名被墙" class="headerlink" title="原因：域名被墙"></a>原因：域名被墙</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">node:events:<span class="number">491</span></span><br><span class="line">      <span class="keyword">throw</span> er; // Unhandled <span class="string">&#x27;error&#x27;</span> event</span><br><span class="line">      ^</span><br><span class="line"></span><br><span class="line">Error: connect ETIMEDOUT <span class="number">118.107</span>.<span class="number">180.216</span>:<span class="number">443</span></span><br></pre></td></tr></table></figure>


<p>在这一情况，我推荐的解决方法是：</p>
<ul>
<li>换个不会被 404 且 允许搭建机器人的实例</li>
<li><code>api-url</code> 改为实例相应的镜像域名</li>
<li><del>肉身移民</del></li>
</ul>
<h4 id="原因：端口占用"><a href="#原因：端口占用" class="headerlink" title="原因：端口占用"></a>原因：端口占用</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 报错显示如下：</span></span><br><span class="line">node:events:<span class="number">491</span></span><br><span class="line">      <span class="keyword">throw</span> er; // Unhandled <span class="string">&#x27;error&#x27;</span> event</span><br><span class="line">      ^</span><br><span class="line"></span><br><span class="line">Error: Client network socket disconnected before secure TLS connection was established</span><br></pre></td></tr></table></figure>

<p>发生在重新打开文件运行 <code>node bot.js</code> 时，属于端口占用，一般发生在80端口。</p>
<p>打开 cmd ，输入：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">netstat <span class="literal">-ano</span>|findstr <span class="string">&quot;80&quot;</span> </span><br><span class="line">	<span class="comment"># 假设对应PID为5136</span></span><br><span class="line">taskkill <span class="literal">-PID</span> <span class="number">5136</span> <span class="operator">-F</span></span><br><span class="line">	<span class="comment"># 关闭，如果关不掉，打开任务管理器关闭</span></span><br></pre></td></tr></table></figure>

<p>占用你端口的可能是微信、坚果云等等，或者其它你并不认识的进程，都关了。如果关了一个端口之后没有变化，就继续关其他跟“80”相关的端口，直到代码能正常运行。</p>
<h3 id="M-stream-延迟大-x2F-无回复"><a href="#M-stream-延迟大-x2F-无回复" class="headerlink" title="M.stream 延迟大&#x2F;无回复"></a><code>M.stream</code> 延迟大&#x2F;无回复</h3><p>首先，我们需要排查最基本的代码块（见下）有没有问题。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> listener = M.<span class="title function_">stream</span>(<span class="string">&#x27;streaming/user&#x27;</span>);</span><br><span class="line">	</span><br><span class="line">listener.<span class="title function_">on</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function"><span class="params">msg</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(msg));</span><br><span class="line">listener.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>如果没有问题，那么，问题可能在：</p>
<ul>
<li>丢包率过高</li>
<li><code>msg =&gt; console.log&#123;...&#125;</code> 括号内部的代码</li>
</ul>
<h4 id="原因：丢包率过高"><a href="#原因：丢包率过高" class="headerlink" title="原因：丢包率过高"></a>原因：丢包率过高</h4><p>打开 cmd ，输入以下代码：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ping google.com </span><br><span class="line">	<span class="comment"># 任意一个被404的网站</span></span><br></pre></td></tr></table></figure>

<p>不论是服务器还是本地都可能会出现丢包率过高的问题，从而导致延迟大&#x2F;无回复情况。这一情况更应该在服务器上解决（而不是本地），解决方法为更换服务器使得丢包率降低。</p>
<p>或者，如果真的很需要在本地运行，可以通过 Clash 直接打开一个已经配置好代理的cmd窗口进行终端调试。</p>
<hr>
<h2 id="Heroku"><a href="#Heroku" class="headerlink" title="Heroku"></a>Heroku</h2><blockquote>
<p>总得来说，heroku的官方教程还是很友好的（<del>在我能看懂每个名字的情况下</del>），有专门的 <a href="https://help.heroku.com/">帮助中心</a>，，而且它不要钱。</p>
</blockquote>
<h3 id="每次打开cmd都需要手动连接吗？"><a href="#每次打开cmd都需要手动连接吗？" class="headerlink" title="每次打开cmd都需要手动连接吗？"></a>每次打开cmd都需要手动连接吗？</h3><p>不需要，在本地相应路径打开仓库之后，输入下列代码查看远程端口，如果连接上了就没有问题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">heroku ps:scale web=1</span><br></pre></td></tr></table></figure>

<h3 id="App-Crashed"><a href="#App-Crashed" class="headerlink" title="App Crashed"></a><code>App Crashed</code></h3><p>官方答复见<a href="https://devcenter.heroku.com/articles/error-codes#h10-app-crashed">此处</a>。</p>
<p>这个错误的出现，一般说明我们的代码刚刚能够在本地运行，但是当我们托管到远程服务器上会报错。其中的原因（在目前项目中）一般是因为远程服务器获取的代码的注册表有问题，比如：</p>
<ul>
<li>package.json 文件的 <code>&quot;script&quot;&#123;&quot;start&quot;: &#125;</code> 没有设置，或设置好没有上传</li>
<li><code>.env</code> 文件未能被服务器读取，因此登录不了 Mastodon 的 API 接口</li>
</ul>
<p>如果你的代码在 <code>heroku local</code> 命令下运行正常，那么别担心，往下做这个问题就会解决了。</p>
<h3 id="Specify-a-Remote"><a href="#Specify-a-Remote" class="headerlink" title="Specify a Remote"></a>Specify a Remote</h3><p>报错信息如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: Multiple apps in git remotes</span><br></pre></td></tr></table></figure>

<p>这个问题一般是因为新手在摸索过程中乱搞，结果弄出了好几个remote。官方给出了解决方法，但是我没看懂。</p>
<p>我的解决方法是直接在 <code>git remote</code> 进行移除多余的远程端口。首先，我们查看对应仓库下有哪几个端口。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>

<p>一般情况下，应该保留的远程端口如下，一共四行：</p>
<ul>
<li><code>&lt;your-specified-remote-name&gt;</code> (fetch &amp; push)</li>
<li><code>origin</code> (fetch &amp; push)</li>
</ul>
<p>输入如下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote remove &lt;the-unwanted-remote&gt;</span><br></pre></td></tr></table></figure>

<p>完成后，输入如下代码进行确认。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br><span class="line">heroku ps:scale web=1</span><br></pre></td></tr></table></figure>

<h3 id="Incorrect-Port-Setup"><a href="#Incorrect-Port-Setup" class="headerlink" title="Incorrect Port Setup"></a>Incorrect Port Setup</h3><p>报错信息如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; status=503 bytes= protocol=https</span><br></pre></td></tr></table></figure>
<p><a href="https://devcenter.heroku.com/articles/troubleshooting-node-deploys#incorrect-port-setup">官方文档</a>给出的理由是端口设置错误，参照<a href="https://derek.coderbridge.io/2020/10/20/%E9%83%A8%E7%BD%B2-nodejs-app-%E5%9C%A8-heroku/">这篇文章</a>，可以知道大概在哪里修理。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Mastodon</tag>
        <tag>Bot</tag>
        <tag>腦洞</tag>
        <tag>唉酱</tag>
        <tag>heroku</tag>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>在太平洋衝浪要做好防溺水措施</title>
    <url>/posts/dos_and_donts_when_surfing.html</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5eaa06b528eebb94d1d9df2a7f276f02ae5551f5c1f8d0393550d6d0583b4f48"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">···</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Mastodon</tag>
      </tags>
  </entry>
  <entry>
    <title>一些摘录</title>
    <url>/posts/initium_221022.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘录。</p>
<span id="more"></span>
<h2 id="《聊聊台湾迷因：我们知道这很地狱、很多中国梗，但真的很好笑》"><a href="#《聊聊台湾迷因：我们知道这很地狱、很多中国梗，但真的很好笑》" class="headerlink" title="《聊聊台湾迷因：我们知道这很地狱、很多中国梗，但真的很好笑》"></a>《聊聊台湾迷因：我们知道这很地狱、很多中国梗，但真的很好笑》</h2><blockquote>
<p>最早提出迷因一词的，是英国演化生物学家、动物行为学家理查・道金斯（Clinton Richard Dawkins）。他在《自私的基因》一书中指，迷因是文化中被认为经由非遗传方式、尤其是透过模仿来传递下去的元素。《牛津英语词典》也收录了迷因一词，并使用了上述定义。道金斯进一步说明，迷因可以透过模仿、复制，将想法、观念、行为或技能从一个人的大脑移转到另一个人的脑中。</p>
<p>英国心理学者苏珊・布拉克莫（Susan Blackmore）延续道金斯的观点，在《迷因》一书中指，网际网络让迷因快速发展，尤其以“高保真度”、“持久度”让迷因不断复制、传递。迷因也从产品复制到指令复制。苏珊・布拉克莫举例，厨师能复制一款浓汤，但为了让浓汤更有效地传递出去，就要复制食谱，有清楚的指令，便能够让这款浓汤的味道散布出去。她认为，一段字词、一个故事、一套规矩、一首歌曲都可以是迷因，最经典的案例大概就是全世界都理解的“生日快乐歌”。</p>
<p>[…] 政治大学传播学院特聘教授林日璇撰文《台湾网路社群的迷因文化特色是？元宇宙概念中那些迷因最红？》，提到传播学理论中的“社会资讯处理程序理论”（Social Information Processing Theory, Walther），网民以匿名、半匿名方式互动，文字容易造成误解，进而引发笔战，若是增加表情符号，则能加强传递想法。而迷因、梗图的出现，更能补充文字的不足。甚至发展出社群中独特的梗，作为团体内认同的文化。<a href="https://theinitium.com/article/20220714-taiwan-meme-1/">1</a></p>
</blockquote>
<blockquote>
<p>地狱梗指将笑点建立在特定事件或族群上，并带有浓厚的嘲讽、冒犯、挑战道德底线的意味。一般来说，地狱梗就是让观者感受到违和、不协调而产生幽默感。不过，地狱梗的接受度也随着心理距离而有所不同。心理学家 Peter McGraw 与 Caleb Warren提出“良性冲突论”，笑话要落在有点痛苦却又安全愉悦的良性冲突区间，才会让观者愉悦，笑话与观者的心理距离太接近则会成为威胁、降低幽默的感受，太远又会因为冲突降低而无法理解笑点。</p>
<p>打着开玩笑大旗的地狱梗界线到底该如何界定，幽默、不道德的界线又到底怎么区分？在台湾大学外文系教授黄宗慧、东华大学华文系教授黄宗洁姊妹合著的书籍《就算牠没有脸》中指出，佛洛伊德曾说：“每个笑话都会募集自己的群众，而为同一个笑话而笑是心理一致性的明显证据”。黄宗慧强调，就如同其他的地狱梗玩笑，看似无关紧要的玩笑话，随着笑话的传播，歧视的态度一再被合理化。开玩笑的人主张豁免权，不应受道德批判，被嘲讽的对象若介意了则显得“不幽默”，造成二度伤害，严肃议题若成了玩笑，也许就很难再回到主题本身。</p>
<p>黄宗洁则更进一步指出，同时保有幽默感与道德敏感度并不冲突，一位谴责玩笑未必能让彼此理解，如果人愿意时刻提醒自己保有敏感度，“每个人都可以画出谑而不虐的那条线”。<a href="https://theinitium.com/article/20220714-taiwan-meme-1/">1</a></p>
</blockquote>
<hr>
<h2 id="《Kindle宣布退出中国：一场阅读变革的发生与沉寂》"><a href="#《Kindle宣布退出中国：一场阅读变革的发生与沉寂》" class="headerlink" title="《Kindle宣布退出中国：一场阅读变革的发生与沉寂》"></a>《Kindle宣布退出中国：一场阅读变革的发生与沉寂》</h2><blockquote>
<p>当然，阅读量得到满足后，“阅读收获”的理解也是因人而异、因时代而异的。如果说上世纪80年代，书店每一个排队的人都曾强烈希望改变命运。那么21世纪迈进信息社会， 以价格换算阅读量的斤斤计较背后，将阅读体验理解为“不可计量的收获”的背后，是罗振宇、吴晓波、樊登等中国商人用泛知识类App（如得到、分答、樊登读书），打造的“知识经济”盛宴，推崇智识崇拜，寄托了关于新奇知识、自我探索、世界认识，财富最美好的梦想。<a href="https://theinitium.com/article/20220606-mainland-kindle/">2</a></p>
</blockquote>
<hr>
<h2 id="《端问答：my-little-airport-的内地歌迷，对香港有什么样的认识和理解？》"><a href="#《端问答：my-little-airport-的内地歌迷，对香港有什么样的认识和理解？》" class="headerlink" title="《端问答：my little airport 的内地歌迷，对香港有什么样的认识和理解？》"></a>《端问答：my little airport 的内地歌迷，对香港有什么样的认识和理解？》</h2><blockquote>
<p>没想到的是，自由度的收紧比我以为的快太多太多，短短一年时间，我已经不得不学会内在地消化那些愤怒，或是用极委婉的方式才敢尝试着做一些表达。在不能言说的时候，我自救的方式是尽可能与更多同温层产生联结，而mla让我看到联结的起点在何处——当言说空间日渐萎缩，我们可以在生活的细枝末节中收获力量。在春天乱搭巴士，在动物园散步，或是在麦记独坐一夜，我们可以在小世界给自己有限的自由，在低空的飞行中学会关心自己和自己身边最平凡的人，借共情的能力打开自己的边界，用敏锐的私人体验反驳宏大话语强加的标签，以及心里一遍又一遍告诉自己：“在炎热与抑郁的夏天，不要停止写诗”。<a href="https://theinitium.com/article/20211016-note-readers-voices-7-mla/">3</a></p>
</blockquote>
<hr>
<h2 id="《my-little-airport告诉我们的：如何在香港的新时代保存自己？》"><a href="#《my-little-airport告诉我们的：如何在香港的新时代保存自己？》" class="headerlink" title="《my little airport告诉我们的：如何在香港的新时代保存自己？》"></a>《my little airport告诉我们的：如何在香港的新时代保存自己？》</h2><blockquote>
<p>没有声嘶力竭，现场演出，只静静站在台上，娓娓唱出，不会跟随大队哥哥姐姐去综艺节目飊高音，这就足够贯彻另类我行我素，保留了一定程度的独立精神。</p>
<p>扩音器传来，叫人随歌起舞的噪音天天在响，这个时代的香港，得保持自己有亲的语言，以及冷眼的幽默感。当主流将逐渐被主旋律取缔，另类乐风与游击演出的意义将更重要。从演出到作品，歌词唱著的无聊和磊落站于台上不摆动的姿态，就是这城市赖以传承及唱不完的故事。<a href="https://theinitium.com/article/20211002-culture-my-little-airport-these-years/">4</a></p>
</blockquote>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>端媒</tag>
        <tag>MLA</tag>
      </tags>
  </entry>
  <entry>
    <title>《那些桥》</title>
    <url>/posts/on_the_bridge.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>所有的桥都孤独。</p>
<span id="more"></span>

<blockquote>
<p>所有的桥都孤独，<br>而声望对它们而言是危险<br>对我们也如此，我们却误以为<br>在我们的肩头感受到了<br>恒星的脚步。<br>可是在消逝者的落差之上<br>还没有梦为我们搭起拱顶 [1]</p>
</blockquote>
<blockquote>
<p>Ours is essentially a tragic age, so we refuse to take it tragically. The cataclysm has happened, we are among the ruins, we start to build up new little habitats, to have new little hopes. It is rather hard work: there is now no smooth road into the future: but we go round, or scramble over the obstacles. We’ve got to live, no matter how many skies have fallen. [2]</p>
</blockquote>
<p>[1]: 出自 英格博格•巴赫曼《那些桥》<br>[2]: 出自 D·H·劳伦斯《查泰莱夫人的情人》</p>
]]></content>
      <categories>
        <category>摘录</category>
      </categories>
      <tags>
        <tag>希望</tag>
      </tags>
  </entry>
  <entry>
    <title>DS8 結課紀念</title>
    <url>/posts/end_of_DS8.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>大洋彼岸存在平常的真实的自由。</p>
<span id="more"></span>

<blockquote>
<p>And for the very first time in 30 years of teaching,<br>l have taken an introductory class<br>with no math or computing prerequisite<br>and taught them how to do nonlinear regression.<br>There is no other class that does this.<br>You have enormous power.</p>
</blockquote>
<p>之所以决定写一篇博文记录结课，一是因为这三个月我从中学到了很多（从Python零基础成长到可以用Python写简单的分类器），二是因为这系列课程给我留下了不少被触动的瞬间。</p>
<p>说来惭愧，<a href="http://data8.org/">DS8</a> 的课堂是这四年来为数不多满足了我对大学幻想的课程之一，而我对大学的幻想，不过是自由散漫的学习氛围。从这点看来，倒也不是我该惭愧，反而应该是此地诸多高等学府的羞耻了。</p>
<p>DS8 的三十九次课，给我最大触动的是老师的真诚与鼓励。那位授课老师反复地鼓励我们提出疑问，反复提醒着当时在场的学生：大部分人都有着与你一样的疑惑，如果你是少数人，那么助教会帮助你解决你的疑惑。</p>
<p>在之前的教育中，我习得了对问题的羞耻与窘迫，而当我通过互联网来到了17年的大洋彼岸，我才听到了一句对在场的人如同呼吸般正常的劝慰。也正是在那刻，我更加相信：故弄玄虚并不能使知识抬价，知识本就是平常而真诚的。</p>
<p>除此之外，当在场的人如呼吸般讨论选举公平性等社会议题的时候，我，作为一个时刻被迫谨言慎行的人，不免被平常的语言表达与交流触动。三个月以来，我不时会点下暂停，对着17年秋季的课程录像陷入沉思：在大洋彼岸，原来有人呼吸着与我身边不一样的空气，那里存在平常的真实的自由。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>DS8</tag>
      </tags>
  </entry>
  <entry>
    <title>那個下午我在舊居燒信</title>
    <url>/posts/burning_letters.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>茫茫如水一般日子淌過，如風的呼吸記憶於我.</p>
<span id="more"></span>

<iframe style="border-radius:12px" src="https://open.spotify.com/embed/track/0PYOuxa9oUTm8LlkagkxYE?utm_source=generator" width="100%" height="152" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>

<p>那个下午我在旧居烧信，细数着自己十九岁之后的四年人生。我常常在想，在这段时间里，我是否有鲜活、自由地活过。</p>
<p>在20年之前，也就是疫情前时代，我享受过半年无忧无虑的大学生活。那段安逸的时光里，我除了上课什么都不用想。在此之后，我的生命飞速地在居家、内卷、封校等枯燥乏味的事情中度过。</p>
<p>转眼间，我快要毕业了。我如愿以偿地被理想的学校录取，可是我发现我的四年实在无聊。</p>
<p>我不能说在这四年里，我没有好好地享受过。我只觉得，自己一直像一只来到陌生环境中受惊吓的动物，我的应激体现在我沉迷于图书馆-饭堂-宿舍的三点一线之中，除此之外，我独来独往，也鲜少将时间大量地花费在学习（无论是专业学习还是自己在此之外的学习）上。我放弃了自己大多数的兴趣。</p>
<p>于是，我虽然在无意义的竞争中倔强地保持了自己的本性，但是我某种程度上成为了一个无个性无兴趣的人。我喜欢画画，但是自大学之后，我鲜少提起画笔；我喜欢看小说，但是似乎大二以来，我也没看多少。</p>
<p>我生命的火焰本应在此时熊熊燃烧，然而，我并不觉得自己是个非常有生命力的人，也不觉得自己此时此刻是一个被理想驱动的人。我不断逃避，但是鲜少奔赴，仿佛我的前方已经失去可以为之奔赴的目标。我羡慕着朋友自由生长的模样，而我的生长并不自由，它不过是时间流逝的必然结果。</p>
<p>不去逃避，去面对，去经历。这便是接下来我能做的事情。</p>
]]></content>
      <categories>
        <category>碎片</category>
      </categories>
      <tags>
        <tag>達明</tag>
      </tags>
  </entry>
  <entry>
    <title>Genesis 创世纪</title>
    <url>/posts/genesis.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这里是关于我搭建个人博客的故事。</p>
<span id="more"></span>

<h2 id="🥰-写在前面"><a href="#🥰-写在前面" class="headerlink" title="🥰 写在前面"></a>🥰 写在前面</h2><p>因为真的很想要一个个人博客(其实还没有想好发什么)，所以决定自己摸索一下从零搭建.</p>
<p>在最开始，我选择了借助jekyll进行搭建，但是因为我太笨了，折腾了一个晚上也没有结果，于是我跟另一位有自建博客经验的朋友讨论了一下，决定自己从零搭建.在这里，我想把搭建的整个过程记录下来，作为我博客的第一篇文章.</p>
<p>希望这篇文章可以帮到与我一样，<strong>没有任何代码基础，但是想自建博客</strong>的你.🥺 </p>
<p>最后，感谢我的朋友🐇兔肉🐇，在这个过程中为我提供的所有支持.</p>
<hr>
<h2 id="🤔-搭建需求"><a href="#🤔-搭建需求" class="headerlink" title="🤔 搭建需求"></a>🤔 搭建需求</h2><ul>
<li><input checked="" disabled="" type="checkbox"> 与 Obsidian 同步更新，最好二者的文件管理框架相通(毕竟我确实没太聪明)</li>
<li><input checked="" disabled="" type="checkbox"> 不能被任何搜索引擎搜索到，也不能被网络爬虫爬到</li>
<li><input checked="" disabled="" type="checkbox"> 能自定义主题，可以根据我的需要改UI</li>
<li><input checked="" disabled="" type="checkbox"> 可能可以有一个评论区(也不一定)</li>
</ul>
<hr>
<h2 id="😫-具体步骤"><a href="#😫-具体步骤" class="headerlink" title="😫 具体步骤"></a>😫 具体步骤</h2><h3 id="注册GH账号与下载Git"><a href="#注册GH账号与下载Git" class="headerlink" title="注册GH账号与下载Git"></a>注册GH账号与下载Git</h3><ul>
<li>不说了，很简单，我都能学会.</li>
</ul>
<hr>
<h3 id="绑定GH并提交文件"><a href="#绑定GH并提交文件" class="headerlink" title="绑定GH并提交文件"></a>绑定GH并提交文件</h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/102592286">主要参考来源，谢谢这位博主</a></li>
<li>对clone到本地的仓库的相应文件右击-<code>Git Bash here</code><ul>
<li><code>git status</code>: 查看仓库状态，显示那些文件未被提交</li>
<li><code>git add + 文件名</code>: 添加文件到临时缓冲区</li>
<li><code>git commit -m &quot;commit text file&quot;</code>: 提交文件到仓库<ul>
<li>第一次提交，即本地没有git仓库的情况下，见下代码</li>
<li>第二次提交，即本地已有git仓库的情况下，<a href="https://zhuanlan.zhihu.com/p/103391101">见此处</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git status</span><br><span class="line"># 查看仓库状态，显示哪些文件未提交</span><br><span class="line"></span><br><span class="line">$ git add test.txt</span><br><span class="line"># 添加文件到临时缓冲区，等待提交</span><br><span class="line"></span><br><span class="line">$ git commit -m &quot;commit text file&quot;</span><br><span class="line"># 提交文件到本地仓库</span><br><span class="line"></span><br><span class="line">$ git log</span><br><span class="line"># 查看本地仓库提交记录</span><br><span class="line"></span><br><span class="line">$ git push origin main</span><br><span class="line"># 更新本地仓库到GH仓库，刷新GH仓库即可看到提交结果</span><br><span class="line"># origin: 远程主机名</span><br><span class="line"># main：仓库所属branch</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在初次提交的状态下，会需要用户定义自己的身份</span><br><span class="line">$ git config --global user.name &quot;name&quot;</span><br><span class="line">$ git config --global user.email &quot;@.com&quot;</span><br><span class="line"></span><br><span class="line"># 然后继续上传即可</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/102592286">主要参考来源，谢谢这位博主</a></li>
<li>这步比较简单，就是找一个适合自己的域名，同时给钱.</li>
<li>因为我比较吝啬，所以我在 <a href="https://name.com/">https://name.com</a> 上选择了 <code>.xyz</code> 这个后缀，它很便宜<ul>
<li>令人发指的是， <code>.poor</code> 真的好贵</li>
</ul>
</li>
<li>我最后选择了 <a href="https://this-lib-cannot-afford-other-names.xyz/">https://this-lib-cannot-afford-other-names.xyz</a> 作为我站域名<ul>
<li>令人发指的是，它也挺贵的</li>
</ul>
</li>
<li>然后朋友告诉我，可能可以找别人代劳，下次我一定记得 😭</li>
</ul>
<hr>
<h3 id="安装-node-js-和-Hexo"><a href="#安装-node-js-和-Hexo" class="headerlink" title="安装 node.js 和 Hexo"></a>安装 node.js 和 Hexo</h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/102592286">主要参考来源，谢谢这位博主</a></li>
</ul>
<h4 id="关于-node-js"><a href="#关于-node-js" class="headerlink" title="关于 node.js"></a>关于 node.js</h4><ul>
<li><strong>设置npm在安装全局模块时的路径和环境变量</strong><ul>
<li>安装之后，在对应文件夹新建两个文件夹 <code>node_cache</code>， <code>node_global</code></li>
<li>打开cmd，输入<ul>
<li><code>npm config set prefix &quot;D:\nodejs\node_global&quot;</code></li>
<li><code>npm config set cache &quot;D:\nodejs\node_cache&quot;</code></li>
<li>注意，两个地方都需要右键设置“属性”，将用户具有完全属性的权限</li>
</ul>
</li>
<li>打开 控制面板 -&gt; 系统 -&gt;高级系统设置 -&gt; 环境变量 <ul>
<li>-&gt; 系统变量，新建一个变量名为“NODE_PATH”，值为“D:\nodejs\node_global\node_modules”</li>
<li>-&gt; 用户变量，编辑变量“PATH”，将相应npm的路径改为：D:\nodejs\node_global</li>
</ul>
</li>
</ul>
</li>
<li><strong>测试</strong><ul>
<li>在 cmd 命令下执行 <code>npm install webpack -g</code></li>
<li>然后 webpack 这个模块已经在我们设置默认的文件夹中了</li>
</ul>
</li>
</ul>
<h4 id="关于-Hexo"><a href="#关于-Hexo" class="headerlink" title="关于 Hexo"></a>关于 Hexo</h4><ul>
<li>Hexo是我们的个人博客网站的框架，在安装之前，我们要先在GitHub上创立一个仓库<ul>
<li>这个仓库一定要是公开的</li>
</ul>
</li>
<li>在D盘新建文件夹 blog ,右键 <code>Git Bash here</code><ul>
<li><code>npm install -g hexo-cli</code> 安装 Hexo</li>
<li><code>hexo init</code> 初始化博客<ul>
<li>从这一步开始，需要翻墙</li>
<li>处理 <code>Error: EPERM: operation not permitted, mkdir ‘D: </code><ul>
<li><a href="https://www.cnblogs.com/yaohe/p/11912547.html">见此处</a></li>
<li>大致意思：因为最初我修改路径到其他地方，因此需要把原来默认路径上的文件删掉</li>
</ul>
</li>
</ul>
</li>
<li><code>hexo g</code> 静态部署</li>
<li><code>hexo s</code> 查看状态<ul>
<li>成功后的样子<ul>
<li>![[Pasted image 20220906164050.png]]</li>
</ul>
</li>
<li>打开了本地运行的hexo，它开始运行了</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a>将Hexo部署到GitHub</h4><ul>
<li>返回 blog 文件夹，笔记本打开 <code>_config.yml</code> 文件</li>
<li>文件底部填入</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:Erostrate-1030/Erostrate-1030.github.io.git</span></span><br><span class="line">  <span class="comment">#你的仓库地址，SSH 格式</span></span><br><span class="line">  <span class="comment">#一定要检查两个是否一样！</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<ul>
<li>返回 blog 文件，打开 Git Bash，安装Git部署插件，输入<ul>
<li><code>npm install hexo-deployer-git --save</code></li>
</ul>
</li>
<li>再分别输入（<em><strong>这三条命令也是每次更新GH仓库要输入的命令</strong></em>）<ul>
<li><code>hexo clean</code> 清除缓存文件 db.json 和已生成的静态文件 public</li>
<li><code>hexo g</code> 生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</li>
<li><code>hexo d</code> 自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</li>
</ul>
</li>
<li>完成之后，打开 <a href="https://erostrate-1030.github.io/">https://erostrate-1030.github.io</a> 就可以看到个人主页</li>
</ul>
<hr>
<h3 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/102592286">主要参考来源，谢谢这位博主</a></li>
<li>打开 cmd 控制台，输入<ul>
<li><code>ping erostrate-1030.github.io</code> 获取IPV4地址</li>
</ul>
</li>
<li>打开 Blog 文件夹里的 source 文件夹，添加CNAME文件，可以先创建一个CNAME.txt文件，打开后写上你的域名，保存后记得要重命名，将.txt删除；依次输入<ul>
<li><code>hexo clean</code></li>
<li><code>hexo g</code></li>
<li><code>hexo d</code></li>
</ul>
</li>
<li>打开GitHub，看看CNAME文件是否已经在你的项目中</li>
<li>解析域名，<a href="https://zhuanlan.zhihu.com/p/86961133">参照此处</a>，等几个小时刷新</li>
</ul>
<hr>
<h3 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h3><ul>
<li><p><a href="https://zhuanlan.zhihu.com/p/102592286">主要参考来源，谢谢这位博主</a></p>
</li>
<li><p>选择Hexo主题和选择Jekyll主题是有区别的，挑选的时候要注意辨别！</p>
</li>
<li><p>返回 blog 文件，打开 Git Bash，输入</p>
<ul>
<li><code>git clone https://github.com/ChrAlpha/hexo-theme-cards.git themes/cards</code></li>
<li>即 <code>git clone (URL) (相对路径)</code></li>
</ul>
</li>
<li><p>打开根目录下的_config.yml (站点配置文件)，修改主题（<strong>注意冒号后都要有空格</strong>）</p>
</li>
<li><p>更新的常用指令</p>
<ul>
<li><code>hexo g &amp;&amp; hexo s</code> 上传到缓冲区，在本地确认博客状态</li>
<li><code>hexo g &amp;&amp; hexo d</code> 直接上传</li>
</ul>
</li>
</ul>
<hr>
<h2 id="🥰-优化博客"><a href="#🥰-优化博客" class="headerlink" title="🥰 优化博客"></a>🥰 优化博客</h2><ul>
<li>大多数的问题可以<a href="https://theme-cards.ichr.me/">参考这里</a>这个页面解决。网络上搜到的很多教程都是基于next主题的，但是每个主题的操作可能非常不一样，</li>
</ul>
<h3 id="魔改主题"><a href="#魔改主题" class="headerlink" title="魔改主题"></a>魔改主题</h3><h4 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h4><ul>
<li>我直接使用了匿名评论箱进行评论管理</li>
</ul>
<h4 id="躲避搜索"><a href="#躲避搜索" class="headerlink" title="躲避搜索"></a>躲避搜索</h4><ul>
<li><a href="https://mikolaje.github.io/2019/hexo_seo.html">参考来源</a></li>
<li>在根目录的 source 文件夹中新建 <code>robots.txt</code></li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 禁止任何搜索引擎搜索到任何内容</span></span><br><span class="line"><span class="attr">user-agent:</span> <span class="string">*</span></span><br><span class="line"><span class="attr">Disallow:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>

<h4 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h4><ul>
<li><a href="https://www.moonloss.com/post/hexo-localsearch/">参考来源：基本</a></li>
<li><a href="https://github.com/ChrAlpha/hexo-theme-cards/issues/91">参考来源：search无法正常加载</a></li>
</ul>
<h4 id="页面优化"><a href="#页面优化" class="headerlink" title="页面优化"></a>页面优化</h4><ul>
<li>TOC与正文间隔距离修改：<code>themes\cards\source\css\style\_functions\toc.styl</code><ul>
<li><code>line 78: padding-left 2rem</code></li>
</ul>
</li>
</ul>
<hr>
<h3 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h3><ul>
<li>在文件管理方面，我的主要需求是<ul>
<li><input checked="" disabled="" type="checkbox"> Obsidian 可以用作我的.md编辑器</li>
<li><input checked="" disabled="" type="checkbox"> Obsidian 的文件目录与博客文章管理目录基本相同</li>
</ul>
</li>
<li>从 <a href="https://hexo.io/zh-cn/docs/front-matter.html">这篇文章：Front-matter设置</a> 我们可以知道，文章主要是通过 <code>Front-matter</code> 进行管理。目前根据我的理解，只要在 Obsidian 文章开头设置好元数据，便可以很方便地将文章发表到个人博客上。</li>
<li>通过利用 Obsidian 中自带的模板插件，编辑时可以将一些常用的代码插入到文本当中（<del>以省去我搜来搜去的时间</del>）</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>造物</tag>
      </tags>
  </entry>
  <entry>
    <title>README</title>
    <url>/about/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p align="center">你好，我是电子幽灵 Erostrate，是这片领域的维护者。</p>

<p align="center">我并不喜欢被太多人打扰，因此如果您希望与我取得联系，可在<a href="https://box.n3ko.co/_/to_erostrate">此处</a>留下一张纸条。</p>

<br>

<p align="center"><del>（说完，自称维护者的云状生物便慢悠悠地飘回了她的窗口）</del></p>]]></content>
  </entry>
  <entry>
    <title>CATEGORIES</title>
    <url>/categories/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>ARCHIVE</title>
    <url>/archives/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/links/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h1 id="layout-links"><a href="#layout-links" class="headerlink" title="layout: links"></a>layout: links</h1><hr>
]]></content>
  </entry>
  <entry>
    <title>Resources</title>
    <url>/resources/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>SEARCH</title>
    <url>/search/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>TAGS</title>
    <url>/tags/index.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
</search>
